(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    393982,       8290]
NotebookOptionsPosition[    379485,       8052]
NotebookOutlinePosition[    379877,       8068]
CellTagsIndexPosition[    379834,       8065]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(*", " ", 
    RowBox[{
    "Import", " ", "or", " ", "Create", " ", "Raytracing", " ", "Results"}], 
    " ", "*)"}], " "}], "Chapter"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.798552051791057*^9, 3.798552052637073*^9}, 
   3.798552148183519*^9, {3.799005681144649*^9, 3.7990056838655148`*^9}, {
   3.805267822255885*^9, 3.805267835633246*^9}, {3.805267977383191*^9, 
   3.805268001323687*^9}},ExpressionUUID->"eff5ed55-8f92-4d10-b4ef-\
af36e67586c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "Up", " ", "Computer", " ", "Options"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"numkernel", "=", "4"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Unprotect", "[", "$ProcessorCount", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"$ProcessorCount", "=", "numkernel"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"-", " ", "Command"}]}]}], " ", "Line", " ", 
      RowBox[{
       RowBox[{"Running", " ", "--"}], "--"}]}], "-"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"cmddata", "=", "$ScriptCommandLine"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dayinyear", "=", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"cmddata", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}]}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{3.87096680333389*^9},
 CellLabel->
  "In[1528]:=",ExpressionUUID->"4b4c73c3-3ef7-4992-9176-98823c16a59c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 1532, 246, 30450810782118945478, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8735467603830547`*^9},
 CellLabel->
  "During evaluation of \
In[1528]:=",ExpressionUUID->"25101a38-5127-428e-a349-0c10677cf733"],

Cell[BoxData[
 TemplateBox[{
  "ToExpression", "notstrbox", 
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
not a string or a box. ToExpression can only interpret strings or boxes as \
Wolfram Language input.\"", 2, 1532, 247, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8735467603913593`*^9},
 CellLabel->
  "During evaluation of \
In[1528]:=",ExpressionUUID->"38864189-837b-4e31-96a1-33e86bf332ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.873546762605983*^9, 3.873546767299274*^9}},
 CellLabel->
  "In[1533]:=",ExpressionUUID->"d0fe980d-5dae-410e-9eaf-f36cb6fc6973"],

Cell[BoxData["\<\"/Users/tomikbaikie/Dropbox (Cambridge \
University)/Physics/SimulationsLSC/Example_simulation/combined_LSC_\
directional\"\>"], "Output",
 CellChangeTimes->{3.873546767785037*^9},
 CellLabel->
  "Out[1533]=",ExpressionUUID->"cdc840a5-8dce-491d-9875-030d00e547c3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dayinyear", " ", "=", " ", "200"}], ";"}], " ", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.873546752286107*^9, 3.8735467563387957`*^9}, {
  3.873546805308378*^9, 3.87354680546031*^9}, {3.873546838173953*^9, 
  3.873546838509692*^9}},
 CellLabel->
  "In[1555]:=",ExpressionUUID->"46ae6a3a-a454-4ca2-ae57-bdfe87171357"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
  "CreateDirectory", "[", "\"\<results_colorado\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.870704259155107*^9, 3.870704263154519*^9}, {
   3.870704525736473*^9, 3.870704541453587*^9}, 3.870966814644635*^9},
 CellLabel->
  "In[1556]:=",ExpressionUUID->"ee3ced2b-608f-4f6e-b2a0-17e81e72536a"],

Cell[BoxData[
 TemplateBox[{
  "CreateDirectory", "eexist", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/tomikbaikie/Dropbox (Cambridge \
University)/Physics/SimulationsLSC/Example_simulation/combined_LSC_\
directional/results_colorado\\\\\\\"\\\"}]\\) already exists.\"", 2, 1556, 
   253, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87354677092206*^9, 3.8735468404132757`*^9},
 CellLabel->
  "During evaluation of \
In[1556]:=",ExpressionUUID->"62a6a89c-88c7-4f4f-bffe-d9f30e24597c"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.8735467709271717`*^9, 3.873546840418167*^9},
 CellLabel->
  "Out[1556]=",ExpressionUUID->"22690163-6518-4233-81d0-02e4e30f94f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["month"], "Input",
 CellChangeTimes->{{3.873546802398959*^9, 3.8735468028802967`*^9}},
 CellLabel->
  "In[1557]:=",ExpressionUUID->"baab336a-52bd-4b8c-8f1a-a588f4867c86"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.873546803361691*^9, 3.873546842634852*^9},
 CellLabel->
  "Out[1557]=",ExpressionUUID->"4cbe7117-5e2c-4a9a-8774-8c688557d8d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Final", " ", "day", " ", "is", " ", "347"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"dayinyear", " ", "<", " ", "24"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"month", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"dayinmonth", " ", "=", " ", "dayinyear"}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dayinyear", " ", "<", " ", "47"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"month", " ", "=", " ", "2"}], ",", " ", 
          RowBox[{"dayinmonth", " ", "=", " ", 
           RowBox[{"dayinyear", " ", "-", " ", "23"}]}]}], "}"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"dayinyear", " ", "<", " ", "76"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"month", " ", "=", " ", "3"}], ",", " ", 
            RowBox[{"dayinmonth", " ", "=", " ", 
             RowBox[{"dayinyear", " ", "-", " ", "46"}]}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dayinyear", " ", "<", " ", "107"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"month", " ", "=", " ", "4"}], ",", " ", 
              RowBox[{"dayinmonth", " ", "=", " ", 
               RowBox[{"dayinyear", " ", "-", " ", "75"}]}]}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"dayinyear", " ", "<", " ", "142"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"month", " ", "=", " ", "5"}], ",", " ", 
                RowBox[{"dayinmonth", " ", "=", " ", 
                 RowBox[{"dayinyear", " ", "-", " ", "106"}]}]}], "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"dayinyear", " ", "<", " ", "177"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"month", " ", "=", " ", "6"}], ",", " ", 
                  RowBox[{"dayinmonth", " ", "=", " ", 
                   RowBox[{"dayinyear", " ", "-", " ", "141"}]}]}], "}"}], 
                ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"dayinyear", " ", "<", " ", "213"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"month", " ", "=", " ", "7"}], ",", " ", 
                    RowBox[{"dayinmonth", " ", "=", " ", 
                    RowBox[{"dayinyear", " ", "-", " ", "176"}]}]}], "}"}], 
                  ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"dayinyear", " ", "<", " ", "246"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"month", " ", "=", " ", "8"}], ",", " ", 
                    RowBox[{"dayinmonth", " ", "=", " ", 
                    RowBox[{"dayinyear", " ", "-", " ", "212"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"dayinyear", " ", "<", " ", "275"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"month", " ", "=", " ", "9"}], ",", " ", 
                    RowBox[{"dayinmonth", " ", "=", " ", 
                    RowBox[{"dayinyear", " ", "-", " ", "245"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"dayinyear", " ", "<", " ", "302"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"month", " ", "=", " ", "10"}], ",", " ", 
                    RowBox[{"dayinmonth", " ", "=", " ", 
                    RowBox[{"dayinyear", " ", "-", " ", "274"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"dayinyear", " ", "<", " ", "325"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"month", " ", "=", " ", "11"}], ",", " ", 
                    RowBox[{"dayinmonth", " ", "=", " ", 
                    RowBox[{"dayinyear", " ", "-", " ", "301"}]}]}], "}"}], 
                    ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"month", " ", "=", " ", "12"}], ",", " ", 
                    RowBox[{"dayinmonth", " ", "=", " ", 
                    RowBox[{"dayinyear", " ", "-", " ", "324"}]}]}], "}"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
             "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"spectralist", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./Denver/fullspectra2018\>\"", "<>", 
       RowBox[{"ToString", "[", "month", "]"}], "<>", "\"\<.mx\>\""}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"startpart", " ", "=", " ", 
     RowBox[{"1", " ", "+", " ", 
      RowBox[{"150", "*", 
       RowBox[{"(", 
        RowBox[{"dayinmonth", " ", "-", " ", "1"}], ")"}]}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"endpart", " ", "=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"startpart", " ", "+", " ", "149"}], " ", ">", " ", 
        RowBox[{"Length", "[", "spectralist", "]"}]}], ",", " ", 
       RowBox[{"Length", "[", "spectralist", "]"}], ",", " ", 
       RowBox[{"startpart", " ", "+", " ", "149"}]}], "]"}]}], ";"}], 
   "\n"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.870968412115717*^9, 3.8709684131709213`*^9}},
 CellLabel->
  "In[1558]:=",ExpressionUUID->"e8e77a94-00da-4e24-984e-f8fa3233cbd4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", "\"\<./raytracing.mx\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "needs", " ", "to", " ", "be", " ", "edited", " ", "for", " ", "each", " ",
     "simulation"}], " ", "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emissionmax", "=", 
   RowBox[{"N", "[", "1200", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emissionmin", "=", 
   RowBox[{"N", "[", "311", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wavelengthtable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "[", "x", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "emissionmin", ",", "emissionmax", ",", "1"}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.870703895955677*^9, 3.870703896103644*^9}, {
  3.870704437308443*^9, 3.870704438071752*^9}, {3.870850704953927*^9, 
  3.870850735252239*^9}, {3.870851313674816*^9, 3.870851344484221*^9}, {
  3.870968592807016*^9, 3.870968642494494*^9}, {3.871029053589748*^9, 
  3.87102905412216*^9}, {3.8710314933096952`*^9, 3.871031493950356*^9}, {
  3.8710315349577217`*^9, 3.871031543048761*^9}, {3.871031619256526*^9, 
  3.8710316507782784`*^9}},
 CellLabel->
  "In[1562]:=",ExpressionUUID->"6761e68c-2966-419b-8791-8bed61f57698"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(*", " ", 
    RowBox[{"LSC", " ", "Orientation"}], "  ", "*)"}], " "}], 
  "Chapter"]], "Input",
 CellChangeTimes->{{3.808549583137394*^9, 
  3.808549593135664*^9}},ExpressionUUID->"3be53f68-4164-4517-a689-\
ebe390ce3d47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"LSC", " ", "orientation"}], ";", " ", 
    RowBox[{
    "vector", " ", "defining", " ", "its", " ", "surface", " ", "normal", " ",
      "in", " ", "degrees"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lscAltitude", "=", "90"}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"0", " ", "is", " ", "vertical"}], ",", " ", 
     RowBox[{"90", " ", "is", " ", "horizontal"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lscAzimuth", " ", "=", " ", "180"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"0", " ", "is", " ", "facing", " ", "North"}], ",", " ", 
     RowBox[{"180", " ", "is", " ", "facing", " ", "South"}]}], "*)"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{3.8735619141058817`*^9},
 CellLabel->
  "In[2049]:=",ExpressionUUID->"539fafaa-87d8-4990-b71a-d0d31c333973"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sphericaltoCartesian", "[", 
     RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "]"}], "=", 
    RowBox[{"FromSphericalCoordinates", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{"\[Pi]", "/", "180."}], 
        RowBox[{"(", 
         RowBox[{"90.", "-", "\[Theta]"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", 
        RowBox[{"2", 
         RowBox[{"\[Pi]", " ", "/", "360."}], "\[Phi]"}]}]}], "}"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"shifted", " ", "to", " ", "our", " ", "angle", " ", 
     RowBox[{"definition", ":", " ", 
      RowBox[{
      "normal", " ", "definition", " ", "is", " ", "theta", " ", "from", " ", 
       "0", " ", "to", " ", "pi"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"phi", " ", "from"}], " ", "-", 
     RowBox[{"pi", " ", "to", " ", "pi"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"normDot", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"a", ".", "b"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Norm", "[", "a", "]"}], 
       RowBox[{"Norm", "[", "b", "]"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "normed", " ", "dotproduct", " ", "to", " ", "calculate", " ", "the", " ", 
    "angle", " ", "between", " ", "sun", " ", "angle", " ", "and", " ", 
    "surface", " ", "normal"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"realAngleAtLSC", "[", " ", 
    RowBox[{"\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "effective", " ", "angle", " ", "between", " ", "lsc", " ", "and", " ", 
      "sun"}], ",", " ", 
     RowBox[{
     "we", " ", "can", " ", "do", " ", "this", " ", "since", " ", "the", " ", 
      "lsc", " ", "is", " ", "symmetric", " ", "in", " ", "the", " ", 
      "plane"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", " ", "b"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"sphericaltoCartesian", "[", 
        RowBox[{"lscAltitude", ",", "lscAzimuth"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", 
       RowBox[{"sphericaltoCartesian", "[", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "this", " ", "is", " ", "the", " ", "orientation", " ", "of", " ", 
        "the", " ", "surface", " ", "normal", " ", "of", " ", "the", " ", 
        "LSC"}], "*)"}], "\n", 
      RowBox[{"90", 
       RowBox[{"(*", 
        RowBox[{
        "go", " ", "from", " ", "surface", " ", "normal", " ", "angle", " ", 
         "to", " ", "surface", " ", "angle"}], "*)"}], "-", " ", 
       RowBox[{
        RowBox[{"ArcCos", "[", " ", 
         RowBox[{"normDot", "[", 
          RowBox[{"a", ",", " ", "b"}], "]"}], "]"}], 
        RowBox[{"360.", "/", 
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}]}]}]}]}]}], "\n", "  ", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.808549843477907*^9, 3.808550136416851*^9}, {
   3.8085501766702557`*^9, 3.808550206586245*^9}, {3.808550660839067*^9, 
   3.808550663176214*^9}, 3.808550729422317*^9},
 CellLabel->
  "In[2101]:=",ExpressionUUID->"835da83f-9cd9-45a5-850f-11ab3052fbe8"],

Cell[BoxData[
 RowBox[{"(*", "Constants", "*)"}]], "Code",
 InitializationCell->
  False,ExpressionUUID->"a6cb5017-f0f1-43fc-8176-37fd538b0a69"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"c", " ", "=", " ", "299792458."}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", 
    RowBox[{"m", " ", "/", " ", "s"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h", " ", "=", " ", 
    RowBox[{
     RowBox[{"6.6260695729", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "34"}]}]}], "//", "N"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", 
    RowBox[{
     RowBox[{"J", " ", "s"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"Planck", "'"}], "s", " ", "Constant"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h2", " ", "=", " ", 
    RowBox[{
     RowBox[{"4.136", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "15"}]}]}], "//", "N"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", 
    RowBox[{
     RowBox[{"eV", " ", "s"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"Planck", "'"}], "s", " ", "Constant"}]}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"q", " ", "=", " ", 
    RowBox[{
     RowBox[{"1.60217657", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "19"}]}]}], "//", "N"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", "Coulombs"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"k", " ", "=", " ", 
    RowBox[{
     RowBox[{"8.617", " ", "*", " ", 
      RowBox[{"10", "^", 
       RowBox[{"\[Minus]", "5"}]}]}], "//", "N"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", 
    RowBox[{"eV", " ", "/", " ", "K"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"T", " ", "=", " ", 
    RowBox[{"298.15", "//", "N"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", "K"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"fac", " ", "=", " ", 
   RowBox[{
    RowBox[{"h", " ", "c", " ", 
     RowBox[{
      RowBox[{"10", "^", "9"}], " ", "/", "q"}]}], "//", "N"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"convert", " ", "nm", " ", "to", " ", "eV"}], " ", "*)"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"k2", "=", " ", 
   RowBox[{
    RowBox[{"1.3807", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "23"}]}]}], "//", "N"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"J", "/", "K"}], "*)"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   RowBox[{
    RowBox[{"k", " ", "T"}], "//", "N"}]}], ";"}]}], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2054]:=",ExpressionUUID->"506b8331-d1c5-4959-9b8a-d7c2cd8a9672"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"spectra", " ", "conversion", " ", "functions"}], "*)"}]], "Code",
 InitializationCell->
  False,ExpressionUUID->"bc14f6d9-a27a-4a4f-bb69-2ced0c8ae8e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Function", " ", "to", " ", "calculate", " ", "the", " ", "flux", " ", 
    "of", " ", "a", " ", "solar", " ", "spectrum"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", 
    RowBox[{"A", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", "^", "2"}], " ", "eV"}], ")"}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"makeFlux", "[", "data_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"fac", "/", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"h", " ", "c"}], ")"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"fac", "/", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}]}], "*", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"h", " ", "c"}], ")"}]}], " ", "*", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", "data"}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"makeFluxnm", "[", "data_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"q", "*", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", 
             RowBox[{"10", "^", 
              RowBox[{"-", "9"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"h", " ", "c"}], ")"}]}]}]}], "}"}], "&"}], "/@", 
      "data"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"unmakeFlux", "[", "data_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"fac", "/", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"h", " ", "c"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"fac", "/", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "*", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"fac", "/", 
              RowBox[{"(", 
               RowBox[{"fac", "/", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ")"}], "^", "2"}],
            "/", 
           RowBox[{"(", 
            RowBox[{"h", " ", "c"}], ")"}]}]}]}], "}"}], "&"}], "/@", 
      "data"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"unmakeFluxnm", "[", "data_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", "q"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"h", " ", "c"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", 
             RowBox[{"10", "^", 
              RowBox[{"-", "9"}]}]}], ")"}]}]}]}], "}"}], "&"}], "/@", 
      "data"}]}], ";"}], "\n", "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"Temperature", " ", "dependencies"}], "*)"}]}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{3.8707044676312027`*^9},
 CellLabel->
  "In[2063]:=",ExpressionUUID->"381d5681-da33-4c97-ac96-d6754edb3fbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Temperature", " ", "dependent", " ", "intrinsic", " ", "charge", " ", 
     "carrier", " ", "concentration", " ", "from", " ", 
     RowBox[{"K", ".", " ", "Misiakos"}]}], ",", " ", 
    RowBox[{"et", " ", 
     RowBox[{"al", ".", " ", "Accurate"}], " ", "Measurements", " ", "of", 
     " ", "the", " ", "Silicon", " ", "Intrinsic", " ", "Carrier", " ", 
     "Density", " ", "from", " ", "78", " ", "to", " ", "340", " ", 
     RowBox[{
     "K", ".", " ", "J", ".", "Appl", ".", "Phys", ".", " ", "1993"}]}], ",", 
    " ", "74", ",", " ", "3293", "\[Dash]", 
    RowBox[{"3297", " ", 
     RowBox[{"DOI", ":", 
      RowBox[{"10.1063", "/", "1.354551"}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", 
    RowBox[{"m", "^", 
     RowBox[{"-", "3"}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Sini", "[", "T_Real", "]"}], " ", ":=", " ", 
    RowBox[{"5.29", "*", " ", 
     RowBox[{"10", "^", "19"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"T", "/", "300."}], ")"}], "^", "2.54"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "6726."}], "/", "T"}], "]"}], "*", 
     RowBox[{"10", "^", "6"}]}]}], ";"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{3.870704473005066*^9},
 CellLabel->
  "In[2067]:=",ExpressionUUID->"a3361b3a-4ea1-48a2-b637-66061adc6eb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", 
      RowBox[{
      "Temperature", " ", "dependent", " ", "bandgap", " ", "is", " ", 
       "calculated", " ", "using", " ", "Varshni"}], "\[CloseCurlyQuote]"}], 
     "s", " ", "empirical", " ", "equation", " ", "with", " ", "values", " ", 
     "from", " ", "the", " ", "book", " ", "Physics", " ", "of", " ", 
     "Semiconductor", " ", "Devices", " ", "Physics", " ", "of", " ", 
     "Semiconductor", " ", "Devices"}], ",", " ", 
    RowBox[{"Wiley", "-", "Interscience"}], ",", " ", 
    RowBox[{"1995", " ", "from", " ", "Sze"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"units", ":", " ", "eV"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SiBandgap", "[", "T_Real", "]"}], " ", ":=", " ", 
    RowBox[{"1.17", " ", "-", " ", 
     RowBox[{"4.73", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "4"}]}], " ", 
      RowBox[{
       RowBox[{"T", "^", "2."}], "/", 
       RowBox[{"(", 
        RowBox[{"T", "+", "636."}], ")"}]}]}]}]}], ";"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8707044754756813`*^9, 3.8707044773411016`*^9}},
 CellLabel->
  "In[2068]:=",ExpressionUUID->"ef603297-b7ca-421a-bdcc-6c001dfbe9f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Temperature", " ", "dependent", " ", "Auger", " ", "coefficient", " ", 
     "from", " ", 
     RowBox[{"J", ".", " ", "Dziewior"}], " ", "et", " ", 
     RowBox[{"al", ".", " ", "Auger"}], " ", "Coefficients", " ", "for", " ", 
     "Highly", " ", "Doped", " ", "and", " ", "Highly", " ", "Excited", " ", 
     RowBox[{
     "Silicon", ".", " ", "Appl", ".", "Phys", ".", "Lett", ".", " ", 
      "1977"}]}], ",", " ", "346", ",", " ", "11", "\[Dash]", 
    RowBox[{"14", " ", 
     RowBox[{"DOI", ":", 
      RowBox[{"10.1063", "/", "1.89694"}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Cn", " ", "=", " ", 
    RowBox[{
     RowBox[{"2.8", " ", "x", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "31"}]}], " ", 
      RowBox[{
       RowBox[{"cm", "^", "6"}], "/", "s"}], " ", "Cp"}], " ", "=", " ", 
     RowBox[{"0.99", " ", "x", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "31"}]}], 
      RowBox[{
       RowBox[{"cm", "^", "6"}], "/", "s"}], " ", 
      RowBox[{"units", ":", " ", 
       RowBox[{
        RowBox[{"m", "^", "6"}], "/", "s"}]}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SiC", "[", "T_Real", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2.8", " ", "+", " ", "0.99"}], ")"}], "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "43"}]}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"T", "/", "300."}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1.", "/", "2."}], ")"}]}]}]}], ";"}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2069]:=",ExpressionUUID->"1e7c8efc-9dca-4c12-babb-51004e245283"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Current", " ", "densities"}], "*)"}]], "Code",
 InitializationCell->
  False,ExpressionUUID->"38c6ab7c-a2d0-46f9-827d-e8308b45fa0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Generation", " ", "current", " ", "density"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"jgSi", "[", "EQE_", "]"}], " ", ":=", " ", 
    RowBox[{"Quiet", "[", 
     RowBox[{"NIntegrate", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Interpolation", "[", 
          RowBox[{"EQE", ",", 
           RowBox[{"InterpolationOrder", "->", "0"}]}], "]"}], "[", "En", 
         "]"}], " ", 
        RowBox[{"\[CapitalGamma]", "[", "En", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"En", ",", "0.0", ",", "4.4"}], "}"}]}], "]"}], "]"}]}], 
   ";"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8708668734450407`*^9, 3.870866873612699*^9}},
 CellLabel->
  "In[2070]:=",ExpressionUUID->"50a3a7ea-e921-474b-af0d-212ec8f5e6e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Radiative", " ", "recombination", " ", "current", " ", "density"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"JRad0Si", " ", "=", " ", 
     RowBox[{"q", " ", "2", " ", 
      RowBox[{"Pi", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", "^", "2"}], " ", 
         RowBox[{"h2", "^", "3"}]}], ")"}]}], 
      RowBox[{"NIntegrate", "[", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"En", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"En", "/", 
             RowBox[{"(", " ", 
              RowBox[{"k", " ", "T"}], ")"}]}], "]"}], "-", "1"}], ")"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"En", ",", 
          RowBox[{"SiBandgap", "[", "T", "]"}], ",", "4.4"}], "}"}]}], 
       "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"JRSi", "[", 
      RowBox[{"V_Real", ",", "Il_Real", ",", "Rs_Real"}], "]"}], ":=", 
     RowBox[{"JRad0Si", " ", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"V", "+", 
            RowBox[{"Il", "*", "Rs", "*", "0.0001"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"k", " ", "T"}], ")"}]}], "]"}], "-", "1"}], ")"}]}]}], 
    ";"}]}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2071]:=",ExpressionUUID->"85c6fe21-b40d-4024-89ee-56eaafa8a08f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Auger", " ", "recombination", " ", "current", " ", "density"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"JRAuger", "[", 
     RowBox[{"V_Real", ",", "Il_Real", ",", "Rs_Real", ",", "L_Real"}], "]"}],
     " ", ":=", "  ", 
    RowBox[{"q", " ", "L", " ", 
     RowBox[{"SiC", "[", "T", "]"}], " ", 
     RowBox[{
      RowBox[{"Sini", "[", "T", "]"}], "^", "3"}], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{"V", "+", 
             RowBox[{"Il", "*", "Rs", "*", "0.0001"}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "k", " ", "T"}], ")"}]}], "]"}], "-", "1"}], 
      ")"}]}]}], ";"}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2073]:=",ExpressionUUID->"bea4d808-e5a5-43b9-86cd-165b69b06890"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Non", "-", 
    RowBox[{
    "radiative", " ", "recombination", " ", "current", " ", "density"}]}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"JRnon", "[", 
     RowBox[{"V_Real", ",", "Il_Real", ",", "Rs_Real", ",", "INR_Real"}], 
     "]"}], " ", ":=", 
    RowBox[{"INR", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "42"}]}], " ", 
     RowBox[{
      RowBox[{"Sini", "[", "T", "]"}], "^", "2"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"V", "+", 
           RowBox[{"Il", "*", "Rs", "*", "0.0001"}]}], ")"}], "/", 
         RowBox[{"(", " ", 
          RowBox[{"k", " ", "T"}], ")"}]}], "]"}], "-", "1"}], ")"}]}]}], 
   ";"}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2074]:=",ExpressionUUID->"73c83f9c-08ba-4f56-a046-86341127c136"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Resistance", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Resistance", "[", 
     RowBox[{"V_Real", ",", "Il_Real", ",", "Rs_Real", ",", "Rsh_Real"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"V", "+", 
       RowBox[{"Il", " ", "*", "Rs", "*", "0.0001"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"Rsh", "*", "0.0001"}], ")"}]}]}], ";"}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2075]:=",ExpressionUUID->"66a5e450-abe2-4889-9985-2076c016da3e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Fitting", " ", "values"}], "*)"}]], "Code",
 InitializationCell->
  False,ExpressionUUID->"f61e7254-5246-4896-9422-a446f492b140"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Thickness", " ", "of", " ", "silicon", " ", "for", " ", "Auger", " ", 
    "recombination", " ", "in", " ", "m"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"thicknesses", " ", "=", " ", 
    RowBox[{"{", "\n", 
     RowBox[{"(*", "1", "*)"}], " ", 
     RowBox[{
      RowBox[{"1.7", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "2", "*)"}], " ", 
      RowBox[{"1.8", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", " ", 
      RowBox[{"(*", " ", "assumption", " ", "*)"}], "\n", 
      RowBox[{"(*", "3", "*)"}], " ", 
      RowBox[{"1.8", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "4", "*)"}], "  ", 
      RowBox[{"1.9", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "5", "*)"}], " ", 
      RowBox[{"1.8", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", " ", 
      RowBox[{"(*", " ", "assumption", " ", "*)"}], "\n", 
      RowBox[{"(*", "6", "*)"}], "  ", 
      RowBox[{"1.8", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", " ", 
      RowBox[{"(*", " ", "assumption", " ", "*)"}], "\n", 
      RowBox[{"(*", "7", "*)"}], " ", 
      RowBox[{"1.9", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "8", "*)"}], " ", 
      RowBox[{"1.95", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "9", "*)"}], " ", 
      RowBox[{"1.5", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "10", "*)"}], " ", 
      RowBox[{"2", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "11", "*)"}], " ", 
      RowBox[{"1.5", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "12", "*)"}], " ", 
      RowBox[{"2", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "\n", 
      RowBox[{"(*", "13", "*)"}], " ", 
      RowBox[{"2", "*", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}]}], "}"}]}], ";"}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2076]:=",ExpressionUUID->"1cf039b1-bf16-42fa-944e-e12db0b89a55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Parasitic", " ", "resistances", " ", "in", " ", "ohm", " ", 
    RowBox[{"cm", "^", "2"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Rs", "=", 
     RowBox[{"{", "\n", 
      RowBox[{"(*", "1", "*)"}], " ", 
      RowBox[{"1.48", ",", "\n", 
       RowBox[{"(*", "2", "*)"}], " ", "1.15", ",", "\n", 
       RowBox[{"(*", "3", "*)"}], " ", "1.35", ",", "\n", 
       RowBox[{"(*", "4", "*)"}], " ", "0.82", ",", "\n", 
       RowBox[{"(*", "5", "*)"}], "1.28", ",", "\n", 
       RowBox[{"(*", "6", "*)"}], " ", "0.73", ",", "\n", 
       RowBox[{"(*", "7", "*)"}], " ", "0.59", ",", "\n", 
       RowBox[{"(*", "8", "*)"}], " ", "0.6", ",", "\n", 
       RowBox[{"(*", "9", "*)"}], " ", "0.67", ",", "\n", 
       RowBox[{"(*", "10", "*)"}], " ", "0.75", ",", "\n", 
       RowBox[{"(*", "11", "*)"}], " ", "0.47", ",", "\n", 
       RowBox[{"(*", "12", "*)"}], "0.31", ",", "\n", 
       RowBox[{"(*", "13", "*)"}], "0.08"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Rsh", "=", 
     RowBox[{"{", "\n", 
      RowBox[{"(*", "1", "*)"}], " ", 
      RowBox[{"1800", ",", "\n", 
       RowBox[{"(*", "2", "*)"}], " ", "1300", ",", "\n", 
       RowBox[{"(*", "3", "*)"}], " ", "1800", ",", "\n", 
       RowBox[{"(*", "4", "*)"}], " ", "1800", ",", "\n", 
       RowBox[{"(*", "5", "*)"}], " ", "1200", ",", "\n", 
       RowBox[{"(*", "6", "*)"}], " ", "2000", ",", "\n", 
       RowBox[{"(*", "7", "*)"}], " ", "2000", ",", "\n", 
       RowBox[{"(*", "8", "*)"}], " ", "3000", ",", "\n", 
       RowBox[{"(*", "9", "*)"}], " ", "2000", ",", "\n", 
       RowBox[{"(*", "10", "*)"}], " ", "800", ",", "\n", 
       RowBox[{"(*", "11", "*)"}], " ", "4000", ",", "\n", 
       RowBox[{"(*", "12", "*)"}], " ", "6000", ",", "\n", 
       RowBox[{"(*", "13", "*)"}], "10000"}], "}"}]}], ";"}]}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2077]:=",ExpressionUUID->"80dab81e-403a-4434-9acc-b476b6076f02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Non", "-", 
    RowBox[{"radiative", " ", "recombination"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"INR", "=", 
    RowBox[{"{", "\n", 
     RowBox[{"(*", "1", "*)"}], " ", 
     RowBox[{"58", ",", "\n", 
      RowBox[{"(*", "2", "*)"}], " ", "85.7", ",", "\n", 
      RowBox[{"(*", "3", "*)"}], " ", "56", ",", "\n", 
      RowBox[{"(*", "4", "*)"}], " ", "58", ",", "\n", 
      RowBox[{"(*", "5", "*)"}], " ", "10.5", ",", "\n", 
      RowBox[{"(*", "6", "*)"}], " ", "43", ",", "\n", 
      RowBox[{"(*", "7", "*)"}], " ", "35", ",", "\n", 
      RowBox[{"(*", "8", "*)"}], " ", "24.1", ",", "\n", 
      RowBox[{"(*", "9", "*)"}], " ", "1.5", ",", "\n", 
      RowBox[{"(*", "10", "*)"}], " ", "1.95", ",", "\n", 
      RowBox[{"(*", "11", "*)"}], " ", "1.7", ",", "\n", 
      RowBox[{"(*", "12", "*)"}], " ", "1.41", ",", "\n", 
      RowBox[{"(*", "13", "*)"}], " ", "1.88485"}], "}"}]}], ";"}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[2079]:=",ExpressionUUID->"5b8f4b02-a7e1-4eeb-a3f9-5a81a9ec4691"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Cell", " ", "13"}], "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Import", " ", "JV", " ", "characteristic"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"IV13", " ", "=", " ", 
    RowBox[{"Import", "[", "\"\<./Record_Si_cell/13_IV.csv\>\"", "]"}]}], 
   ";"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{3.8707044919733*^9},
 CellLabel->
  "In[2080]:=",ExpressionUUID->"5f29833a-e520-4174-8b66-aab58377ae02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Import", " ", "EQE"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"EQE13", " ", "=", " ", 
     RowBox[{"Import", "[", "\"\<./Record_Si_cell/13_EQE.csv\>\"", "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"intEQE13", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"EQE13", ",", 
       RowBox[{"InterpolationOrder", "->", "0"}]}], "]"}]}], 
    ";"}]}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.870866850785727*^9, 3.870866851155304*^9}},
 CellLabel->
  "In[2081]:=",ExpressionUUID->"4849ae2e-3925-4a0d-830b-b996a6da1e2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Padding", " ", "spectra", " ", "with", " ", "zeros"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"padZero", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{"Union", "[", 
     RowBox[{
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"300", ",", " ", "1300", ",", " ", "1"}], "]"}], ",", " ", 
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"x_", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0"}], "}"}]}], ",", " ", 
        RowBox[{"{", "1", "}"}]}], "]"}], ",", " ", "list"}], "]"}]}], 
   ";"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8706091031300087`*^9, 3.8706091032553797`*^9}},
 CellLabel->
  "In[2083]:=",ExpressionUUID->"be60a10c-6666-479a-a8c2-634afa8cc262"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"OG", " ", "function"}], " ", "*)"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{
  3.870609100211858*^9, {3.873547499343693*^9, 
   3.873547503329371*^9}},ExpressionUUID->"7e046684-2688-499b-ad1c-\
8caf928c7bac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sicell", "[", 
    RowBox[{
    "areasurface_", ",", "areaside_", ",", "side_Integer", ",", 
     "pointinmonth_Integer"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "time", ",", "altitude", ",", "spectradirect", ",", "spectradiffuse", 
       ",", "intspectradirect", ",", "intspectradiffuse", ",", 
       "intfluxnmdirect", ",", "sidespectradirectint", ",", 
       "intfluxnmdiffuse", ",", "concentration", ",", 
       "totalincidentpowerdiffuse", ",", 
       "totalconcentratedincidentpowerdiffuse", ",", 
       "totalincidentpowerdirect", ",", 
       "totalconcentratedincidentpowerdirect", ",", "totalfluxdiffuse", ",", 
       "totalfluxdirect", ",", "LSCoutputlistdirect", ",", 
       "sidespectrafluxdirect", ",", "LSCoutputlistdiffuse", ",", 
       "sidespectrafluxdiffuse", ",", "sidespectradirect", ",", 
       "sidespectradiffuse", ",", "outputpowerLSCdiffuse", ",", 
       "outputpowerLSCdirect", ",", "JG", ",", "jg", ",", "dSi", ",", 
       "totalefficiency", ",", "outputpowerLSC", ",", "LSCefficiency", ",", 
       "efficiency", ",", "JGdirect"}], "}"}], ",", "\n", "\n", 
     RowBox[{
      RowBox[{"numberofangles", "=", "89"}], ";", "\n", 
      RowBox[{"totalphotonsin", "=", "10000"}], ";", "\n", 
      RowBox[{"cell", "=", "13"}], ";", "\n", "\n", "\n", 
      RowBox[{"time", "=", 
       RowBox[{"spectralist", "[", 
        RowBox[{"[", 
         RowBox[{"pointinmonth", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"incidentangle", "=", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"realAngleAtLSC", "[", 
          RowBox[{
           RowBox[{"spectralist", "[", 
            RowBox[{"[", 
             RowBox[{"pointinmonth", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"spectralist", "[", 
            RowBox[{"[", 
             RowBox[{"pointinmonth", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"altitude", "=", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"spectralist", "[", 
            RowBox[{"[", 
             RowBox[{"pointinmonth", ",", "2"}], "]"}], "]"}], ",", "1"}], 
          "]"}]}], ";"}], " ", "*)"}], " ", "\n", "\n", 
      RowBox[{"spectradirect", "=", 
       RowBox[{"spectralist", "[", 
        RowBox[{"[", 
         RowBox[{"pointinmonth", ",", "4"}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"spectradiffuse", "=", 
       RowBox[{"spectralist", "[", 
        RowBox[{"[", 
         RowBox[{"pointinmonth", ",", "5"}], "]"}], "]"}]}], ";", "\n", "\n", 
      "\n", 
      RowBox[{"intspectradirect", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"spectradirect", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";", "\n", 
      RowBox[{"intspectradiffuse", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"spectradiffuse", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";", "\n",
       "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "this", " ", "the", " ", "the", " ", "current", " ", "FLUX", " ", 
        "per", " ", "nm"}], "*)"}], " ", "\n", 
      RowBox[{"intfluxnmdirect", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"makeFluxnm", "[", "spectradirect", "]"}], ",", 
         RowBox[{"InterpolationOrder", "->", "0"}]}], "]"}]}], ";", "\n", 
      RowBox[{"intfluxnmdiffuse", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"makeFluxnm", "[", "spectradiffuse", "]"}], ",", 
         RowBox[{"InterpolationOrder", "->", "0"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"concentration", " ", "factor", " ", "of", " ", "LSC"}], " ", 
       "*)"}], " ", "\n", 
      RowBox[{"concentration", "=", 
       RowBox[{"N", "[", 
        RowBox[{"areasurface", "/", 
         RowBox[{"(", 
          RowBox[{"4", "*", " ", "areaside"}], ")"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Total", " ", "Power", " ", "DENSITY", " ", "of", " ", "the", " ", 
        "diffuse", " ", "light"}], " ", "*)"}], " ", "\n", 
      RowBox[{"totalincidentpowerdiffuse", "=", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"intspectradiffuse", "[", "wl", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"wl", ",", 
           RowBox[{"spectradiffuse", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"spectradiffuse", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"e", ".", "g", ".", " ", "total"}], " ", "AM1", ".5", " ", 
        "power"}], "*)"}], " ", 
      RowBox[{"(*", 
       RowBox[{"W", "/", 
        RowBox[{"m", "^", "2"}]}], "*)"}], "\n", 
      RowBox[{"totalincidentpowerdirect", " ", "=", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"intspectradirect", "[", "wl", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"wl", ",", 
           RowBox[{"spectradirect", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"spectradirect", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"e", ".", "g", ".", " ", "total"}], " ", "AM1", ".5", " ", 
        "power"}], "*)"}], " ", 
      RowBox[{"(*", 
       RowBox[{"W", "/", 
        RowBox[{"m", "^", "2"}]}], "*)"}], "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Concentrated", " ", "fluxes", " ", "of", " ", "light", " ", "to", " ",
         "compare", " ", "vs", " ", "a", " ", "perfect", " ", "LSC", " ", 
        "concentrator", " ", "if", " ", "required"}], " ", "*)"}], " ", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"totalconcentratedincidentpowerdirect", " ", "=", " ", 
         RowBox[{"concentration", "*", " ", "totalincidentpowerdirect"}]}], 
        ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"e", ".", "g", ".", " ", "Total"}], " ", "AM1", ".5", " ", 
         "power", " ", "concentrated", " ", "on", " ", "the", " ", "Si", " ", 
         RowBox[{"(", 
          RowBox[{"7500", 
           RowBox[{"W", "/", 
            RowBox[{"m", "^", "2"}]}]}], ")"}]}], "*)"}], " ", "*)"}], " ", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"totalconcentratedincidentpowerdiffuse", " ", "=", 
         RowBox[{"concentration", "*", " ", "totalincidentpowerdiffuse"}]}], 
        ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"e", ".", "g", ".", " ", "Total"}], " ", "AM1", ".5", " ", 
         "power", " ", "concentrated", " ", "on", " ", "the", " ", "Si", " ", 
         RowBox[{"(", 
          RowBox[{"7500", 
           RowBox[{"W", "/", 
            RowBox[{"m", "^", "2"}]}]}], ")"}]}], "*)"}], " ", "*)"}], " ", 
      "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Charge", " ", "FLUX", "  ", "total"}], " ", "*)"}], " ", "\n", 
      RowBox[{"totalfluxdiffuse", "=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"intfluxnmdiffuse", "[", "j", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"spectradiffuse", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"spectradiffuse", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"total", " ", "flux", " ", "in", " ", "spectrum", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"AM1", ".5", "G"}], "=", 
          RowBox[{"689.833", " ", 
           RowBox[{"A", "/", 
            RowBox[{"m", "^", "2"}]}]}]}]}]}], "*)"}], "\n", 
      RowBox[{"totalfluxdirect", "=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"intfluxnmdirect", "[", "j", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"spectradirect", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"spectradirect", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"total", " ", "flux", " ", "in", " ", "spectrum", " ", 
        RowBox[{"(", 
         RowBox[{"A", "/", 
          RowBox[{"m", "^", "2"}]}]}]}], "*)"}], "\n", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "if", " ", "the", " ", "sun", " ", "is", " ", "above", " ", 
        "horizon"}], " ", "*)"}], " ", "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"incidentangle", ">=", "1"}], ",", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
         "this", " ", "function", " ", "related", " ", "the", " ", "ray", " ",
           "tracing", " ", "data", " ", "to", " ", "the", " ", "output"}], 
         " ", "*)"}], " ", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "the", " ", "output", " ", "is", " ", "determined", " ", "by", " ", 
           "multiplying", " ", "\n", "1.", " ", "the", " ", "input", " ", 
           "diffuse", " ", "charge", " ", "flux", " ", 
           RowBox[{"(", "intfluxnmdiffuse", ")"}], " ", "in", " ", 
           RowBox[{"A", "/", 
            RowBox[{"m", "^", "2"}]}], " ", "\n", "2.", " ", "time", " ", 
           "the", " ", "concentration", " ", "factor", " ", "to", " ", 
           "account", " ", "for", " ", "the", " ", "area", " ", "of", " ", 
           "the", " ", "LSC", " ", 
           RowBox[{"(", "dimensionless", ")"}], " ", "\n", "2.", " ", "the", 
           " ", "number", " ", "of", " ", "photons", " ", "per", " ", 
           "wavelength", " ", "per", " ", "angle", " ", "from", " ", "packed",
            " ", "the", " ", "data", " ", 
           RowBox[{"(", "dimensionless", ")"}], " ", "\n", "3.", " ", 
           "dividing", " ", "that", " ", "by", " ", "the", " ", "number", " ",
            "of", " ", "photons", " ", "in", " ", "the", " ", "LSC", " ", 
           "simulation"}], ",", " ", 
          RowBox[{
          "giving", " ", "an", " ", "efficiency", " ", "per", " ", "angle", 
           " ", "\n", "4.", " ", "we", " ", "are", " ", "interested", " ", 
           "in", " ", "direct", " ", "light", " ", "at", " ", "this", " ", 
           "specifc", " ", 
           RowBox[{"angle", ".", " ", "\n", "\n", "resulting"}], " ", "table",
            " ", "is", " ", "a", " ", "table", " ", "of", " ", "wavelgnths", 
           " ", "vs", "  ", "current", " ", "flux", " ", "density", " ", 
           "spectrum", " ", "FROM", " ", "the", " ", "LSC", " ", "for", " ", 
           "each", " ", "input"}]}], "  ", "*)"}], " ", "\n", "\n", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "resulting", " ", "dimensions", " ", "is", " ", "wavelengths", " ", 
           "in", " ", "and", " ", "wavelengths", " ", "out", " ", 
           "simulated"}], ",", " ", 
          RowBox[{
          "this", " ", "relates", " ", "the", " ", "spectrum", " ", "in", " ",
            "to", " ", "the", " ", "spectrum", " ", "out", "\n", "it", " ", 
           "has", " ", "dimensions", " ", "of", " ", "wavelength", " ", "in", 
           " ", "at", " ", "at", " ", "each", " ", "point", " ", "a", " ", 
           "spectrum", " ", "out", " ", "\n", " ", "that", " ", "is", " ", 
           "then", " ", "scaled"}]}], "  ", "*)"}], " ", "\n", "\n", 
        RowBox[{
         RowBox[{"WithCleanup", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SetSystemOptions", "[", 
            RowBox[{"\"\<CompileOptions\>\"", "->", 
             RowBox[{"\"\<TableCompileLength\>\"", "->", "Infinity"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LSCoutputlistdirect", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"wlength", ",", 
                 RowBox[{
                  RowBox[{"1", "/", 
                   RowBox[{"(", "totalphotonsin", ")"}]}], "*", 
                  RowBox[{"intfluxnmdirect", "[", "wlength", "]"}], "*", 
                  RowBox[{"Normal", "[", 
                   RowBox[{"raytracingdata", "[", 
                    RowBox[{"[", 
                    RowBox[{"side", ",", "incidentangle", ",", 
                    RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], 
                    "]"}], "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                "wlength", ",", " ", "emissionmin", ",", " ", "emissionmax", 
                 ",", "1"}], "}"}]}], "]"}]}], ";"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"SetSystemOptions", "[", 
            RowBox[{"\"\<CompileOptions\>\"", "->", 
             RowBox[{"\"\<TableCompileLength\>\"", "->", "250"}]}], "]"}]}], 
          "]"}], ";", "\n", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"Now", ",", " ", 
           RowBox[{
           "LSCoutputlistdirect", " ", "in", " ", "terms", " ", "in", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"input", " ", "wavelenglth"}], ",", 
              RowBox[{"{", 
               RowBox[{"output", " ", "spectra"}], "}"}]}], "}"}]}], ",", " ", 
           RowBox[{
           "what", " ", "we", " ", "need", " ", "is", " ", "the", " ", 
            "total", " ", "output", " ", "spectra", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"nm", " ", "out"}], ",", " ", "total"}], "}"}]}]}], 
          "  ", "*)"}], " ", "\n", 
         RowBox[{"outputmatrix", " ", "=", 
          RowBox[{"LSCoutputlistdirect", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
         RowBox[{"sidespectrafluxdirect", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Lambda]", ",", 
              RowBox[{"Total", "[", 
               RowBox[{"outputmatrix", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", 
                  RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], 
                 "]"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Lambda]", ",", 
              RowBox[{"wavelengthtable", "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         ";", 
         RowBox[{"(*", 
          RowBox[{"nm", ",", 
           RowBox[{"A", "/", 
            RowBox[{"(", 
             RowBox[{"nm", " ", 
              RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "this", " ", "gives", " ", "it", " ", "instead", " ", "of", " ", 
            "Current", " ", "density", " ", "flux"}], ",", " ", 
           RowBox[{
           "as", " ", "power", " ", "density", " ", "flux", " ", "per", " ", 
            "nm"}]}], " ", "*)"}], " ", "\n", 
         RowBox[{"sidespectradirect", "=", 
          RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect", "]"}]}], ";", 
         " ", 
         RowBox[{"(*", 
          RowBox[{"nm", ",", 
           RowBox[{"W", "/", 
            RowBox[{"(", 
             RowBox[{"nm", " ", 
              RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "total", " ", "power", " ", "per", " ", "unit", " ", "area"}], " ", 
          "*)"}], " ", "\n", 
         RowBox[{"sidespectradirectint", " ", "=", " ", 
          RowBox[{"Interpolation", "[", 
           RowBox[{"sidespectradirect", ",", 
            RowBox[{"InterpolationOrder", "->", "0"}]}], "]"}]}], ";", "\n", 
         RowBox[{"outputpowerLSCdirect", "=", 
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{"sidespectradirectint", "[", "x", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"sidespectradirect", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"sidespectradirect", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
           "]"}]}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "current", " ", "density", " ", "of", " ", "the", " ", "silicon", 
           " ", "solar", " ", "cell", " ", "is", " ", "determined", " ", "by",
            " ", "multiplying", " ", "EQE", " ", "is", " ", "in", " ", 
           "units", " ", "of", " ", "eV", " ", "times", " ", "this", " ", 
           "by", " ", "the", " ", "fluxs", " ", "in", " ", 
           RowBox[{"A", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "^", "2"}], " ", "/", "eV"}], ")"}]}]}], " ", 
          "*)"}], " ", "\n", 
         RowBox[{"sidespectradirectinteV", " ", "=", " ", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"makeFlux", "[", "sidespectradirect", "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";", 
         "\n", 
         RowBox[{"JGdirect", "=", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"intEQE13", "[", "En", "]"}], "*", 
             RowBox[{"sidespectradirectinteV", "[", "En", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"En", ",", 
              RowBox[{"fac", "/", 
               RowBox[{"sidespectradirect", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ",", 
              RowBox[{"fac", "/", 
               RowBox[{"sidespectradirect", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"MaxRecursion", "->", "10000"}], ",", 
            RowBox[{"WorkingPrecision", "->", "4"}]}], "]"}]}], ";"}], " ", 
        RowBox[{"(*", 
         RowBox[{"A", "/", 
          RowBox[{"m", "^", "2"}]}], "*)"}], "\n", ",", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "No", " ", "direct", " ", "when", " ", "Sun", " ", "is", " ", 
          "below", " ", "the", " ", "horizon"}], "*)"}], "\n", 
        RowBox[{
         RowBox[{"sidespectrafluxdirect", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"w", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"w", ",", " ", "300", ",", " ", "1300"}], "}"}]}], 
           "]"}]}], ";", "\n", 
         RowBox[{"sidespectradirect", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"w", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"w", ",", " ", "300", ",", " ", "1300"}], "}"}]}], 
           "]"}]}], ";", " ", 
         RowBox[{"(*", 
          RowBox[{"nm", ",", 
           RowBox[{"W", "/", 
            RowBox[{"(", 
             RowBox[{"nm", " ", 
              RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\n", 
         RowBox[{"outputpowerLSCdirect", "=", "0"}], ";", "\n", 
         RowBox[{"JGdirect", "=", "0"}], ";", "\n", 
         RowBox[{"incidentangle", "=", "0"}], ";", "\n", 
         RowBox[{"numberofangles", "=", "89"}], ";"}]}], "\n", "]"}], ";", 
      "\n", "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{"*", " ", "Diffuse"}], " ", "**)"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "similarly", " ", "to", " ", "direct", " ", "output", " ", 
         "generation"}], ",", " ", 
        RowBox[{
        "but", " ", "this", " ", "time", " ", "we", " ", "look", " ", "at", 
         " ", "the", " ", "spectra", " ", "from", " ", "each", " ", "angle"}],
         ",", " ", 
        RowBox[{"(", 
         RowBox[{"because", " ", "it", " ", "is", " ", "diffuse"}], ")"}], 
        ",", " ", 
        RowBox[{
        "so", " ", "therefore", " ", "we", " ", "must", " ", "also", " ", 
         "divide", " ", "by", " ", "number", " ", "of", " ", "angles"}]}], 
       " ", "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"LSCoutputlistdiffuse", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"padZero", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"1", "/", 
                  RowBox[{"(", 
                   RowBox[{"numberofangles", "*", "totalphotonsin"}], ")"}]}],
                  "*", 
                 RowBox[{"intfluxnmdiffuse", "[", "wlength", "]"}], "*", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], " ", "&"}], " ", 
             "/@", " ", 
             RowBox[{"packedthedata", "[", 
              RowBox[{"[", 
               RowBox[{"side", ",", " ", "angle", ",", " ", 
                RowBox[{
                "wlength", " ", "-", " ", "startwavelength", " ", "+", " ", 
                 "1"}]}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"angle", ",", " ", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", " ", 
                 RowBox[{"altitude", " ", "-", " ", "1"}], ",", " ", "1"}], 
                "]"}], ",", " ", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"altitude", " ", "+", " ", "1"}], ",", " ", "90", 
                 ",", "1"}], "]"}]}], "]"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "wlength", ",", " ", "startwavelength", ",", " ", "1200", ",", 
             " ", "1"}], "}"}]}], "]"}]}], ";"}], "*)"}], "\n", "\n", 
      RowBox[{"anglerange", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{"incidentangle", "-", "1"}], ",", "1"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"incidentangle", "+", "1"}], ",", "90", ",", "1"}], 
          "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"WithCleanup", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SetSystemOptions", "[", 
         RowBox[{"\"\<CompileOptions\>\"", "->", 
          RowBox[{"\"\<TableCompileLength\>\"", "->", "Infinity"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"LSCoutputlistdiffuse", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"wlength", ",", 
              RowBox[{
               RowBox[{"1", "/", 
                RowBox[{"(", "totalphotonsin", ")"}]}], "*", 
               RowBox[{"intfluxnmdiffuse", "[", "wlength", "]"}], "*", 
               RowBox[{"Normal", "[", 
                RowBox[{"raytracingdata", "[", 
                 RowBox[{"[", 
                  RowBox[{"side", ",", "angle", ",", 
                   RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}],
                  "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
            RowBox[{"{", 
             RowBox[{"wlength", ",", " ", 
              RowBox[{"wavelengthtable", "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"angle", ",", "anglerange"}], "}"}]}], "]"}]}], ";"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"SetSystemOptions", "[", 
         RowBox[{"\"\<CompileOptions\>\"", "->", 
          RowBox[{"\"\<TableCompileLength\>\"", "->", "250"}]}], "]"}]}], 
       "]"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"nm", ",", 
        RowBox[{"A", "/", 
         RowBox[{"(", 
          RowBox[{"nm", " ", 
           RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\n", "\n", 
      RowBox[{"optimizedoutputdiffuse", "=", "LSCoutputlistdiffuse"}], ";", 
      "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "this", " ", "time", " ", "total", " ", "over", " ", "both", " ", 
        "angles", " ", "and", " ", "wavelengths"}], " ", "*)"}], " ", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Now", ",", " ", 
        RowBox[{
        "LSCoutputlistdiffuse", " ", "in", " ", "terms", " ", "in", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"input", " ", "wavelenglth"}], ",", "angle", ",", 
           RowBox[{"{", 
            RowBox[{"output", " ", "spectra"}], "}"}]}], "}"}]}], ",", " ", 
        RowBox[{
        "what", " ", "we", " ", "need", " ", "is", " ", "the", " ", "total", 
         " ", "output", " ", "spectra", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"nm", " ", "out"}], ",", " ", "total"}], "}"}]}]}], "  ", 
       "*)"}], " ", "\n", 
      RowBox[{"outputmatrix", " ", "=", 
       RowBox[{"LSCoutputlistdiffuse", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"sidespectrafluxdiffuse", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"outputmatrix", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", ";;", ",", 
                RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
              "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]", ",", 
           RowBox[{"wavelengthtable", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      " ", 
      RowBox[{"(*", 
       RowBox[{"nm", ",", 
        RowBox[{"A", "/", 
         RowBox[{"(", 
          RowBox[{"nm", " ", 
           RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\n", "\n", 
      RowBox[{"sidespectradiffuse", "=", 
       RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdiffuse", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"nm", ",", 
        RowBox[{"W", "/", 
         RowBox[{"(", 
          RowBox[{"nm", " ", 
           RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\n", 
      RowBox[{"sidespectradiffuseint", " ", "=", " ", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"sidespectradiffuse", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";", "\n",
       "\n", 
      RowBox[{"outputpowerLSCdiffuse", "=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"sidespectradiffuseint", "[", "y", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"sidespectradiffuse", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"sidespectradiffuse", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"outputpowerLSC", "=", " ", 
       RowBox[{
       "outputpowerLSCdiffuse", " ", "+", " ", "outputpowerLSCdirect"}]}], 
      ";", " ", 
      RowBox[{"(*", 
       RowBox[{"concentrated", " ", "power"}], " ", 
       RowBox[{"(*", 
        RowBox[{"W", "/", 
         RowBox[{"(", 
          RowBox[{"m", "^", "2"}], ")"}]}], "*)"}], "*)"}], "\n", 
      RowBox[{"sidespectradiffuseinteV", " ", "=", " ", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"makeFlux", "[", "sidespectradiffuse", "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";", "\n",
       "\n", 
      RowBox[{"JGdiffuse", " ", "=", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"intEQE13", "[", "En", "]"}], "*", 
          RowBox[{"sidespectradiffuseinteV", "[", "En", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"En", ",", 
           RowBox[{"fac", "/", 
            RowBox[{"sidespectradiffuse", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"fac", "/", 
            RowBox[{"sidespectradiffuse", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"MaxRecursion", "->", "10000"}], ",", 
         RowBox[{"WorkingPrecision", "->", "4"}]}], "]"}]}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{"**", 
        RowBox[{"*", " ", "Silicon", " ", "cell"}]}], " ", "****)"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "total", " ", "current", " ", "density", " ", "impinging", " ", "on", 
        " ", "the", " ", "silicon", " ", "is", " ", "given", " ", "by", " ", 
        "the", " ", "sum", " ", "of", " ", "the", " ", "diffuse", " ", "and", 
        " ", "direct", " ", "light"}], " ", "*)"}], " ", "\n", 
      RowBox[{"jg", "=", 
       RowBox[{"JGdiffuse", "+", "JGdirect"}]}], ";", "\n", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Make", " ", "JV", " ", "characteristic"}], " ", "*)"}], "\n", 
      RowBox[{"dSi", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"v1", ",", 
           RowBox[{
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{"Il", "==", 
               RowBox[{"jg", "-", 
                RowBox[{"JRSi", "[", 
                 RowBox[{"v1", ",", "Il", ",", 
                  RowBox[{"Rs", "[", 
                   RowBox[{"[", "cell", "]"}], "]"}]}], "]"}], "-", 
                RowBox[{"JRAuger", "[", 
                 RowBox[{"v1", ",", "Il", ",", 
                  RowBox[{"Rs", "[", 
                   RowBox[{"[", "cell", "]"}], "]"}], ",", 
                  RowBox[{"thicknesses", "[", 
                   RowBox[{"[", "cell", "]"}], "]"}]}], "]"}], "-", 
                RowBox[{"JRnon", "[", 
                 RowBox[{"v1", ",", "Il", ",", 
                  RowBox[{"Rs", "[", 
                   RowBox[{"[", "cell", "]"}], "]"}], ",", 
                  RowBox[{"INR", "[", 
                   RowBox[{"[", "cell", "]"}], "]"}]}], "]"}], "-", 
                RowBox[{"Resistance", "[", 
                 RowBox[{"v1", ",", "Il", ",", 
                  RowBox[{"Rs", "[", 
                   RowBox[{"[", "cell", "]"}], "]"}], ",", 
                  RowBox[{"Rsh", "[", 
                   RowBox[{"[", "cell", "]"}], "]"}]}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"Il", ",", "0"}], "}"}], ",", 
              RowBox[{"PrecisionGoal", "->", "5"}], ",", 
              RowBox[{"MaxIterations", "->", "10000"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"v1", ",", "0", ",", 
           RowBox[{
            RowBox[{"SiBandgap", "[", "T", "]"}], "-", "0.3"}], ",", ".005"}],
           "}"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"ivSi", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{"dSi", ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Calculate", " ", "Voc"}], " ", "*)"}], "\n", 
      RowBox[{"vocSi", "=", 
       RowBox[{
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"ivSi", "[", "v", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"v", ",", 
            RowBox[{
             RowBox[{"SiBandgap", "[", "T", "]"}], "-", "0.4"}]}], "}"}]}], 
         "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Calculate", " ", "Jsc"}], " ", "*)"}], "\n", 
      RowBox[{"jscSi", "=", 
       RowBox[{
        RowBox[{"ivSi", "[", "0", "]"}], "/", "10"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"mA", "/", 
        RowBox[{"cm", "^", "2"}]}], "*)"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Finding", " ", "the", " ", "maximum", " ", "power", " ", "conversion",
         " ", "efficiency", " ", "of", " ", "the", " ", "Si", " ", "cell", 
        " ", "we", " ", "add", " ", "additional", " ", "constraints", " ", 
        "that", " ", "the", " ", "voltage", " ", "must", " ", "be", " ", 
        "positive", " ", "and", " ", "to", " ", "help", " ", "NMaximize"}], 
       "*)"}], "\n", 
      RowBox[{"eff", "=", 
       RowBox[{"NMaximize", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"100", 
            RowBox[{"ivSi", "[", "V", "]"}], " ", 
            RowBox[{"V", "/", "outputpowerLSC"}]}], ",", 
           RowBox[{"0", "<", "V", "<", 
            RowBox[{
             RowBox[{"SiBandgap", "[", "T", "]"}], "-", "0.3"}]}]}], "}"}], 
         ",", "V"}], "]"}]}], ";", "\n", 
      RowBox[{"efficiency", "=", 
       RowBox[{"eff", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"efficiency", " ", "of", " ", "Si"}], "*)"}], "\n", 
      RowBox[{"maxvoltage", "=", 
       RowBox[{"V", "/.", 
        RowBox[{"eff", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", 
      RowBox[{"maxcurrent", "=", 
       RowBox[{"ivSi", "[", "maxvoltage", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"A", "/", 
        RowBox[{"m", "^", "2"}]}], "*)"}], "\n", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"LSCefficiency", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"outputpowerLSC", "/", 
            RowBox[{"(", 
             RowBox[{
             "totalconcentratedincidentpowerdiffuse", "+", 
              "totalconcentratedincidentpowerdirect"}], " ", ")"}]}], ")"}], "  ",
           "100"}]}], " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"efficiency", " ", "of", " ", "LSC"}], ",", " ", 
          RowBox[{"relative", " ", "to", " ", "surface", " ", "area"}]}], " ",
          "*)"}], ";"}], "*)"}], "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "power", " ", "into", " ", "the", " ", "LSC", " ", "vs", " ", "power",
          " ", "out", " ", "of", " ", "the", " ", "side", " ", "of", " ", 
         "LSC", " ", "BEFORE", " ", "impinging", " ", "onto", " ", "silicon", 
         " ", "cell", " ", "\n", "outputpower", " ", "LSC", " ", "is", " ", 
         "in", " ", 
         RowBox[{"W", "/", 
          RowBox[{"(", 
           RowBox[{"m", "^", "2"}], ")"}]}], " ", "as", " ", "is", " ", 
         "totalincidentpowerdirect"}], "+", "totalincidentpowerdiffuse"}], 
       "*)"}], " ", "\n", 
      RowBox[{"outputpowerlsc", " ", "=", " ", 
       RowBox[{"areaside", "*", "outputpowerLSC"}]}], ";", "\n", 
      RowBox[{"inputpower", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"areasurface", "*", 
         RowBox[{"(", 
          RowBox[{
          "totalincidentpowerdirect", "+", "totalincidentpowerdiffuse"}], 
          ")"}]}], ")"}]}], ";", "\n", 
      RowBox[{"lscPCE", " ", "=", " ", 
       RowBox[{"outputpowerlsc", "/", "inputpower"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "si", " ", "PCE", " ", "is", " ", "the", " ", "PCE", " ", "from", " ", 
        "the", " ", "LSC", " ", "output"}], " ", "*)"}], " ", "\n", 
      RowBox[{"siPCE", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"maxcurrent", "*", "maxvoltage"}], ")"}], "/", 
        "outputpowerlsc"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"efficiency", " ", "of", " ", "LSC"}], " ", "&"}], " ", 
         "Si", " ", "system"}], ",", " ", 
        RowBox[{"relative", " ", "to", " ", "surface", " ", "area"}]}], " ", 
       "*)"}], "\n", 
      RowBox[{"totalefficiency", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"maxcurrent", "*", "maxvoltage"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"areasurface", "*", 
          RowBox[{"(", 
           RowBox[{
           "totalincidentpowerdirect", "+", "totalincidentpowerdiffuse"}], 
           ")"}]}], ")"}]}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "assume", " ", "that", " ", "the", " ", "max", " ", "current", " ", 
         "and", " ", "the", " ", "max", " ", "voltage", " ", "is", " ", 
         "consistent", " ", "over", " ", "the", " ", "timestep", " ", "size", 
         " ", "\n", "data", " ", "is", " ", "in", " ", "5", " ", "minute", 
         " ", "internvals"}], ",", " ", 
        RowBox[{"but", " ", "we", " ", "do", " ", "3", " ", "steps", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "set", " ", "out", " ", "in", " ", "efficiency", " ", "table", " ",
             "which", " ", "calls", " ", "this", " ", "function"}], " ", "-", 
           " ", 
           RowBox[{"this", " ", "is", " ", "therefore", " ", "15", " ", 
            RowBox[{"minutes", "."}]}]}], " ", "\n", "  "}]}]}], "*)"}], " ", 
      "\n", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "maxcurrent", "*", "maxvoltage", " ", "is", " ", "the", " ", 
         "power"}], ",", " ", 
        RowBox[{
        "but", " ", "we", " ", "need", " ", "to", " ", "give", " ", "this", 
         " ", "in", " ", 
         RowBox[{"hours", ".", "  ", "\n", "  ", "times"}], " ", "by", " ", 
         "a", " ", "thousand", " ", "to", " ", "get", " ", "kilowatt", " ", 
         "hours"}]}], "*)"}], " ", "\n", 
      RowBox[{"kwh", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"maxcurrent", "*", "maxvoltage"}], ")"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"15", "/", "60"}], ")"}], "/", "1000"}]}]}], ";", "\n", 
      "\n", 
      RowBox[{"Print", "[", "\"\<return\>\"", "]"}], ";", "\n", "\n", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"month", ",", "pointinmonth", ",", 
         RowBox[{"DateString", "[", "time", "]"}], ",", "side", ",", 
         "totalefficiency", ",", "lscPCE", ",", "siPCE", ",", "kwh", ",", 
         "inputpower", ",", "outputpowerlsc", ",", "siPCE"}], "}"}], "]"}], 
      ";"}]}], " ", "\n", "\n", "]"}]}], ";"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.870609261437359*^9, 3.870609280801453*^9}, {
   3.8706093960508547`*^9, 3.870609425768594*^9}, {3.870609470033236*^9, 
   3.870609495048003*^9}, {3.870609570691844*^9, 3.870609701870954*^9}, {
   3.870609749470394*^9, 3.870609773072201*^9}, {3.870609820654038*^9, 
   3.870610004653714*^9}, {3.870610048410544*^9, 3.870610065617655*^9}, {
   3.870610133736806*^9, 3.870610180094714*^9}, 3.870610533466481*^9, 
   3.870610651029418*^9, {3.870610700186289*^9, 3.870610707970747*^9}, {
   3.870610756443739*^9, 3.870610779770754*^9}, {3.870611023312916*^9, 
   3.8706110707306137`*^9}, 3.870611108750852*^9, {3.87061113917768*^9, 
   3.870611216776264*^9}, {3.8706112596144743`*^9, 3.870611263518293*^9}, {
   3.8706115141010513`*^9, 3.870611528976493*^9}, {3.870611689585498*^9, 
   3.8706116978900223`*^9}, {3.870611741918543*^9, 3.8706118296037416`*^9}, {
   3.870611878221689*^9, 3.870611890217823*^9}, {3.870611931188965*^9, 
   3.870611952652649*^9}, {3.870612033150161*^9, 3.870612040462253*^9}, {
   3.870612141209935*^9, 3.87061218579498*^9}, {3.870612408498455*^9, 
   3.870612781273271*^9}, {3.8706128314508944`*^9, 3.8706128559956636`*^9}, {
   3.870613017607242*^9, 3.870613130681429*^9}, {3.8706131948068447`*^9, 
   3.870613214747283*^9}, {3.870613265132299*^9, 3.870613303055088*^9}, {
   3.870613333509049*^9, 3.8706135473798523`*^9}, {3.870613713638093*^9, 
   3.870613771820345*^9}, {3.870613802066601*^9, 3.8706138143943043`*^9}, {
   3.8706138904668713`*^9, 3.8706139404188538`*^9}, {3.870613988963113*^9, 
   3.870614071972208*^9}, {3.87061412627596*^9, 3.870614198964486*^9}, {
   3.87061426270113*^9, 3.8706142804409924`*^9}, {3.870614317863331*^9, 
   3.8706144010775642`*^9}, {3.8706759128908157`*^9, 
   3.8706759164614067`*^9}, {3.870678255556592*^9, 3.87067826232262*^9}, {
   3.870678334523958*^9, 3.870678364492173*^9}, 3.870678394852478*^9, {
   3.870678427759321*^9, 3.870678495484208*^9}, {3.8707022331284523`*^9, 
   3.870702242250227*^9}, {3.87070350588386*^9, 3.8707035410199623`*^9}, {
   3.8707035822263813`*^9, 3.870703613423338*^9}, 3.8707037776733923`*^9, {
   3.870703907469288*^9, 3.870703920797244*^9}, {3.870704587812561*^9, 
   3.870704597866248*^9}, {3.870704699048893*^9, 3.870704726379464*^9}, {
   3.870757498042941*^9, 3.870757523238488*^9}, {3.87075779794398*^9, 
   3.8707577988542213`*^9}, {3.8707612876428013`*^9, 3.870761336842651*^9}, {
   3.870840523605935*^9, 3.870840575004899*^9}, {3.8708411579325438`*^9, 
   3.870841215870399*^9}, {3.870842048016111*^9, 3.870842063693613*^9}, {
   3.870843099819653*^9, 3.8708431033423767`*^9}, {3.870843181111726*^9, 
   3.8708431817550583`*^9}, {3.870843414636153*^9, 3.870843534762233*^9}, 
   3.87085062739069*^9, {3.870850757250393*^9, 3.870850818906102*^9}, {
   3.870850896063347*^9, 3.870850904830411*^9}, 3.870854094847382*^9, 
   3.870854879456697*^9, {3.8708667848069477`*^9, 3.870866798557489*^9}, {
   3.870866857415627*^9, 3.870866885265912*^9}, {3.873222864199177*^9, 
   3.8732228646487494`*^9}, 3.873547407779698*^9, 3.8735474993448477`*^9},
 CellLabel->
  "In[1610]:=",ExpressionUUID->"b4f534f4-9ea4-4f8c-96bf-ac8c0082d539"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pointinmonth", "=", "startpart"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"numberofangles", "=", "89"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalphotonsin", "=", "10000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cell", "=", "13"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"time", "=", 
    RowBox[{"spectralist", "[", 
     RowBox[{"[", 
      RowBox[{"pointinmonth", ",", "1"}], "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"incidentangle", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"realAngleAtLSC", "[", 
      RowBox[{
       RowBox[{"spectralist", "[", 
        RowBox[{"[", 
         RowBox[{"pointinmonth", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"spectralist", "[", 
        RowBox[{"[", 
         RowBox[{"pointinmonth", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "incidentangle"}], "Input",
 CellChangeTimes->{{3.873559121848003*^9, 3.873559130287635*^9}, {
   3.873559166255395*^9, 3.873559188519689*^9}, 3.873559249737423*^9, {
   3.8735621164902363`*^9, 3.873562117837431*^9}, 3.8735698790427103`*^9},
 CellLabel->
  "In[2449]:=",ExpressionUUID->"296f3da0-8c18-4c44-a1f0-118c68418a11"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.8735698794079847`*^9},
 CellLabel->
  "Out[2455]=",ExpressionUUID->"5fa037b4-0293-48b2-8a1b-aa36ddfff27f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"altitude", "=", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"spectralist", "[", 
        RowBox[{"[", 
         RowBox[{"pointinmonth", ",", "2"}], "]"}], "]"}], ",", "1"}], 
      "]"}]}], ";"}], " ", "*)"}], " ", "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"spectradirect", "=", 
     RowBox[{"spectralist", "[", 
      RowBox[{"[", 
       RowBox[{"pointinmonth", ",", "4"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"spectradiffuse", "=", 
     RowBox[{"spectralist", "[", 
      RowBox[{"[", 
       RowBox[{"pointinmonth", ",", "5"}], "]"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"intspectradirect", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"spectradirect", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"intspectradiffuse", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"spectradiffuse", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";"}], "\n",
    "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "this", " ", "the", " ", "the", " ", "current", " ", "FLUX", " ", "per", 
     " ", "nm"}], "*)"}], " ", "\n", 
   RowBox[{
    RowBox[{"intfluxnmdirect", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"makeFluxnm", "[", "spectradirect", "]"}], ",", 
       RowBox[{"InterpolationOrder", "->", "0"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"intfluxnmdiffuse", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"makeFluxnm", "[", "spectradiffuse", "]"}], ",", 
       RowBox[{"InterpolationOrder", "->", "0"}]}], "]"}]}], ";"}], "\n", 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Total", " ", "Power", " ", "DENSITY", " ", "of", " ", "the", " ", 
     "diffuse", " ", "light"}], " ", "*)"}], " ", "\n", 
   RowBox[{
    RowBox[{"totalincidentpowerdiffuse", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"intspectradiffuse", "[", "wl", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"wl", ",", 
         RowBox[{"spectradiffuse", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"spectradiffuse", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"e", ".", "g", ".", " ", "total"}], " ", "AM1", ".5", " ", 
     "power"}], "*)"}], " ", 
   RowBox[{"(*", 
    RowBox[{"W", "/", 
     RowBox[{"m", "^", "2"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"totalincidentpowerdirect", " ", "=", " ", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"intspectradirect", "[", "wl", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"wl", ",", 
         RowBox[{"spectradirect", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"spectradirect", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"e", ".", "g", ".", " ", "total"}], " ", "AM1", ".5", " ", 
     "power"}], "*)"}], " ", 
   RowBox[{"(*", 
    RowBox[{"W", "/", 
     RowBox[{"m", "^", "2"}]}], "*)"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.8735561891895227`*^9, 3.873556193821464*^9}, 
   3.8735591207636547`*^9, 3.873559477300633*^9},
 CellLabel->
  "In[2084]:=",ExpressionUUID->"b0716dbd-6e91-42ed-8829-e26a75b479ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"totalincidentpowerdiffuse", "+", 
  "totalincidentpowerdirect"}]], "Input",
 CellChangeTimes->{{3.873559513583811*^9, 3.873559515832753*^9}},
 CellLabel->
  "In[1809]:=",ExpressionUUID->"95803282-1fbc-4b98-841d-e3d651004dff"],

Cell[BoxData["1019.9471103350943`"], "Output",
 CellChangeTimes->{3.8735595162238626`*^9},
 CellLabel->
  "Out[1809]=",ExpressionUUID->"356de2ec-a53f-4636-ae44-40af4cc3a280"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateString", "[", "time", "]"}]], "Input",
 CellChangeTimes->{{3.8735589984298143`*^9, 3.873559025189227*^9}},
 CellLabel->
  "In[1771]:=",ExpressionUUID->"7bc3c023-92bf-486c-a578-8ec5192593ab"],

Cell[BoxData["\<\"Fri 20 Jul 2018 14:25:00\"\>"], "Output",
 CellChangeTimes->{{3.873558997190937*^9, 3.87355902610843*^9}},
 CellLabel->
  "Out[1771]=",ExpressionUUID->"f8cbaecc-6d99-4e73-a1b8-fcf2c3015a1b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"intspectradiffuse", "[", "wl", "]"}], ",", 
     RowBox[{"intspectradirect", "[", "wl", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"wl", ",", "290", ",", "1500"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873556112167642*^9, 3.873556163283939*^9}, {
  3.8735619717811747`*^9, 3.873561979461485*^9}},
 CellLabel->
  "In[2095]:=",ExpressionUUID->"539d0acc-f310-4644-a8ea-0f104fd37d92"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"exporttablediffuse", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"wl", ",", 
       RowBox[{"intspectradiffuse", "[", "wl", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"wl", ",", "290", ",", "1500", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exporttabledirect", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"wl", ",", 
       RowBox[{"intspectradirect", "[", "wl", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"wl", ",", "290", ",", "1500", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<./plots_for_sanity_colorado/intspectradiffuse.csv\>\"", ",", 
   "exporttablediffuse"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<./plots_for_sanity_colorado/intspectradirect.csv\>\"", ",", 
   "exporttabledirect"}], "]"}]}], "Input",
 CellChangeTimes->{{3.873561983985694*^9, 3.873561984983817*^9}, {
  3.873562018993*^9, 3.87356206615247*^9}},
 CellLabel->
  "In[2097]:=",ExpressionUUID->"d13988d8-e44b-406c-a1bd-f66c0602aa77"],

Cell[BoxData["\<\"./plots_for_sanity_colorado/intspectradiffuse.csv\"\>"], \
"Output",
 CellChangeTimes->{{3.873556124080459*^9, 3.873556163823915*^9}, {
   3.873561966332428*^9, 3.873561979990097*^9}, 3.873562070966811*^9},
 CellLabel->
  "Out[2099]=",ExpressionUUID->"c2a9370a-dc38-4b13-b120-344ecff982a0"],

Cell[BoxData["\<\"./plots_for_sanity_colorado/intspectradirect.csv\"\>"], \
"Output",
 CellChangeTimes->{{3.873556124080459*^9, 3.873556163823915*^9}, {
   3.873561966332428*^9, 3.873561979990097*^9}, 3.873562070985011*^9},
 CellLabel->
  "Out[2100]=",ExpressionUUID->"63a9153f-7d0e-4838-96ba-d41556b6c3bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["totalincidentpowerdiffuse"], "Input",
 CellLabel->
  "In[1767]:=",ExpressionUUID->"c4e3be30-7f2d-45c4-8708-575bf57c1584"],

Cell[BoxData["441.4242982074517`"], "Output",
 CellChangeTimes->{3.873558902623163*^9},
 CellLabel->
  "Out[1767]=",ExpressionUUID->"3a04ce53-3108-4cf1-ba4e-477fe83f888e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["totalincidentpowerdirect"], "Input",
 CellLabel->
  "In[1766]:=",ExpressionUUID->"2df359f8-badc-49af-a2b1-d601dd852634"],

Cell[BoxData["578.5228121276426`"], "Output",
 CellChangeTimes->{{3.873558897198078*^9, 3.873558901195854*^9}},
 CellLabel->
  "Out[1766]=",ExpressionUUID->"cb72b9cc-2808-47fd-adcd-7908a2cf7326"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"inputflux", " ", "=", " ", 
  RowBox[{
  "totalincidentpowerdiffuse", "+", "totalincidentpowerdirect"}]}]], "Input",
 CellChangeTimes->{{3.8735622942965603`*^9, 3.873562300514525*^9}},
 CellLabel->
  "In[2131]:=",ExpressionUUID->"306ddd69-7029-4542-af03-a9e966794f7e"],

Cell[CellGroupData[{

Cell[BoxData["totalincidentpowerdiffuse"], "Input",
 CellLabel->
  "In[2438]:=",ExpressionUUID->"20de4437-c3e7-423c-a5d8-65b7174bc454"],

Cell[BoxData["441.4242982074517`"], "Output",
 CellChangeTimes->{3.873562301817672*^9, 3.873569542014113*^9},
 CellLabel->
  "Out[2438]=",ExpressionUUID->"7fc1f00b-0243-4ec2-a53a-1d8a462fef2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["totalincidentpowerdirect"], "Input",
 CellLabel->
  "In[2439]:=",ExpressionUUID->"33cb2b41-f29d-422f-8955-c04e4ded9a2a"],

Cell[BoxData["578.5228121276426`"], "Output",
 CellChangeTimes->{3.873569545116857*^9},
 CellLabel->
  "Out[2439]=",ExpressionUUID->"9e10d771-8dd1-4153-b5b3-5f3caef0d469"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"totalfluxdiffuse", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"intfluxnmdiffuse", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"spectradiffuse", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"spectradiffuse", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "flux", " ", "in", " ", "spectrum", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"AM1", ".5", "G"}], "=", 
      RowBox[{"689.833", " ", 
       RowBox[{"A", "/", 
        RowBox[{"m", "^", "2"}]}]}]}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"totalfluxdirect", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"intfluxnmdirect", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"spectradirect", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"spectradirect", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"total", " ", "flux", " ", "in", " ", "spectrum", " ", 
    RowBox[{"(", 
     RowBox[{"A", "/", 
      RowBox[{"m", "^", "2"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"intfluxnmdiffuse", "[", "wl", "]"}], ",", 
      RowBox[{"intfluxnmdirect", "[", "wl", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"wl", ",", "350", ",", "1500"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"toexport", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"intfluxnmdiffuse", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "300", ",", "1200", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<./plots_for_sanity_colorado/inputspectradiffuse.csv\>\"", ",", 
   "toexport"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toexport", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"intfluxnmdirect", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "300", ",", "1200", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<./plots_for_sanity_colorado/inputspectradirect.csv\>\"", ",", 
   "toexport"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.873556229281062*^9, 3.8735562654172583`*^9}, {
  3.873566094773934*^9, 3.873566131659792*^9}, {3.8735695173761673`*^9, 
  3.8735695361736193`*^9}},
 CellLabel->
  "In[2431]:=",ExpressionUUID->"15e1f7bd-9f31-43f2-a8c1-c12f004dcf82"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$17464413#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
F58j4+U8NOwzkQc6tbEjIx6GzOWay9WEgf1+3N3Hc5CftF3VyCiOh7Whll9E
W8PAlLcCh/BrZC3Zua6Hb+LhQdvYW5UdWL20VqVOlCL3eUU4Xy5Hlpcx16iv
wM4Dra4pW1oY8GyR5DhchVzr+b0r9S2ysHRRKt+7eMixjd+DixEGbJv9nX1q
kPPundQYeY+8snMLh1ldPPa+Mlj8rz8MGDUNdL2tR07wyE7d3xAP+9qD/M0+
hYHvkh7O8Y3I6o3aGhzNyKHu3BzuLfFQP7dyY2EoDNB20Lo+tSLLNqSkGrUj
u7ndci7tiIf5oQvhKSNhoFpCRWNPF7LAhxV2cjeylWtj1yotHkrYHhaAY2Hg
hTgl1ZmOvFR31ZnZi2zooqChz4yHoVp3yN8nw0Ds9jn2wj7kkdqqrp2sePhT
LFsM/zMMqNyNSI36iBy0zdx5cQC5472khv3neGg5N5ys8isMSN75zt49iHxb
rKjr+DByRY1/6osv8bBrYqbROT0C8Nw+6bxtBPmS6BaN0G/IGe8G2GdH42GD
dH605ehjMOeU3XVtDBls9UhtGUcmVWs7a0zGw6yPNzl3KuHAZ0dujYwpZPPK
q6l8S/Ew96naVcUQCtD7e1TH7Q/yIU3Rwd6/8ZCFY+csyooBUr6zgVoryAKl
7TLpq8h/f+e+5/qH9ePxTp5nrVQwrhZ+4846ckORToYGewI8UBR/a3kmFpTM
ShikciA/V178xsaVAE0nrspWi8UDimtPuCM3clBevkIHD7LLj+gmVb4E6DMq
pT6hnQCuKjk6JfIjG93W5/sngKz5QuY/e8EEaJ31KTPQLhHIJI6UVe9JgG6f
bu6L3/8U/PS+Q/cwS4Cfu3gfOrJng1eebefvFSVAjzy7bx5rxeDappQjiwKJ
sDM2TimguQIo8b62jRZMhDnB5kfLsfvFX46OaGkh5Ob10TfFwsgJK/+GT4ok
Qusn7UmCzpXg5tL2TQNbkY/MHz7qJpYIt09xXwioqAQcM0Z2HNuRaZN2hARx
5LTv/uVKOxLhK+cNOx7+KuD6NXakRhJZ4GPjsXHpRGgoUdHy0qoKsBhDDg9l
kXNpf0jCuxNh29/DkbdfVgHfji1VmXuQDVsUv2vKJ0JlAacU/dUqcDCiMsFf
NxH6+N5QDR2pBish9DohgNwa8GM6AybCW0M9WaLq70CSH5eEpj6yo7e0QbsB
srrHUbfrJxOh5X0O9/cR7wCni1ny71PIdCfnhsdGifD4iXlyRP878Mzh0ezO
M8hi+sZG7yyw3zforPp01oARXXuv85aJcOW84v1s2fegWOth2ncr5BCNuNYH
15DPqeYvbLZJhFFbmMaz994DqUNNshm2yD/2D585eiMRLm4Ar4sN70GV/F+f
NjvkqF0iz20dkC2klDrmbyZCtS2ly86baoGChMGfSEfkBVHrPTudE+HXCsVb
peq1oF7Yx7TwNnLMJpKfwV3kG7y5mf0uiXBj+d+qkG0tUOas7brrhvxvnbW8
4Y78P3PKR14=
       "]]},
     Annotation[#, "Charting`Private`Tag$17464413#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{350.0000000000008, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{350, 1500}, {0., 0.4320851481005347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8735562562609587`*^9, 3.873556266000113*^9}, 
   3.873558875863608*^9, 3.873562343771318*^9, 3.873566132588132*^9, {
   3.8735695189353437`*^9, 3.8735695367078857`*^9}},
 CellLabel->
  "Out[2433]=",ExpressionUUID->"d4c0eee7-a289-4010-87a6-8694c1336505"],

Cell[BoxData["\<\"./plots_for_sanity_colorado/inputspectradiffuse.csv\"\>"], \
"Output",
 CellChangeTimes->{{3.8735562562609587`*^9, 3.873556266000113*^9}, 
   3.873558875863608*^9, 3.873562343771318*^9, 3.873566132588132*^9, {
   3.8735695189353437`*^9, 3.87356953673144*^9}},
 CellLabel->
  "Out[2435]=",ExpressionUUID->"bc1be06b-3953-487e-b084-d0102c88cbaf"],

Cell[BoxData["\<\"./plots_for_sanity_colorado/inputspectradirect.csv\"\>"], \
"Output",
 CellChangeTimes->{{3.8735562562609587`*^9, 3.873556266000113*^9}, 
   3.873558875863608*^9, 3.873562343771318*^9, 3.873566132588132*^9, {
   3.8735695189353437`*^9, 3.873569536733585*^9}},
 CellLabel->
  "Out[2437]=",ExpressionUUID->"cb1fdcda-433d-4fb6-9f5a-346b2453bf43"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"WithCleanup", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetSystemOptions", "[", 
     RowBox[{"\"\<CompileOptions\>\"", "->", 
      RowBox[{"\"\<TableCompileLength\>\"", "->", "Infinity"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LSCoutputlistdirect", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"wlength", ",", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", "totalphotonsin", ")"}]}], "*", 
           RowBox[{"intfluxnmdirect", "[", "wlength", "]"}], "*", 
           RowBox[{"Normal", "[", 
            RowBox[{"raytracingdata", "[", 
             RowBox[{"[", 
              RowBox[{"side", ",", "incidentangle", ",", 
               RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
             "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "wlength", ",", " ", "emissionmin", ",", " ", "emissionmax", ",", 
          "1"}], "}"}]}], "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
    RowBox[{"SetSystemOptions", "[", 
     RowBox[{"\"\<CompileOptions\>\"", "->", 
      RowBox[{"\"\<TableCompileLength\>\"", "->", "250"}]}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellLabel->
  "In[2137]:=",ExpressionUUID->"1fb7688e-e28e-4825-86df-6688be0fc191"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WithCleanup", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetSystemOptions", "[", 
     RowBox[{"\"\<CompileOptions\>\"", "->", 
      RowBox[{"\"\<TableCompileLength\>\"", "->", "Infinity"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LSCoutputlistdirectside1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"wlength", ",", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", "totalphotonsin", ")"}]}], "*", 
           RowBox[{"intfluxnmdirect", "[", "wlength", "]"}], "*", 
           RowBox[{"Normal", "[", 
            RowBox[{"raytracingdata", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "incidentangle", ",", 
               RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
             "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "wlength", ",", " ", "emissionmin", ",", " ", "emissionmax", ",", 
          "1"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LSCoutputlistdirectside2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"wlength", ",", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", "totalphotonsin", ")"}]}], "*", 
           RowBox[{"intfluxnmdirect", "[", "wlength", "]"}], "*", 
           RowBox[{"Normal", "[", 
            RowBox[{"raytracingdata", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "incidentangle", ",", 
               RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
             "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "wlength", ",", " ", "emissionmin", ",", " ", "emissionmax", ",", 
          "1"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LSCoutputlistdirectside3", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"wlength", ",", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", "totalphotonsin", ")"}]}], "*", 
           RowBox[{"intfluxnmdirect", "[", "wlength", "]"}], "*", 
           RowBox[{"Normal", "[", 
            RowBox[{"raytracingdata", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "incidentangle", ",", 
               RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
             "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "wlength", ",", " ", "emissionmin", ",", " ", "emissionmax", ",", 
          "1"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"LSCoutputlistdirectside4", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"wlength", ",", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"(", "totalphotonsin", ")"}]}], "*", 
           RowBox[{"intfluxnmdirect", "[", "wlength", "]"}], "*", 
           RowBox[{"Normal", "[", 
            RowBox[{"raytracingdata", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "incidentangle", ",", 
               RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
             "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "wlength", ",", " ", "emissionmin", ",", " ", "emissionmax", ",", 
          "1"}], "}"}]}], "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
    RowBox[{"SetSystemOptions", "[", 
     RowBox[{"\"\<CompileOptions\>\"", "->", 
      RowBox[{"\"\<TableCompileLength\>\"", "->", "250"}]}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8735629764058943`*^9, 3.8735629937214108`*^9}},
 CellLabel->
  "In[2147]:=",ExpressionUUID->"b60e4795-2ad5-41d0-a668-d02d0545ff4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Now", ",", " ", 
    RowBox[{"LSCoutputlistdirect", " ", "in", " ", "terms", " ", "in", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"input", " ", "wavelenglth"}], ",", 
       RowBox[{"{", 
        RowBox[{"output", " ", "spectra"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{
    "what", " ", "we", " ", "need", " ", "is", " ", "the", " ", "total", " ", 
     "output", " ", "spectra", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nm", " ", "out"}], ",", " ", "total"}], "}"}]}]}], "  ", 
   "*)"}], " ", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"outputmatrix", " ", "=", 
     RowBox[{"LSCoutputlistdirectside1", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sidespectrafluxdirect1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"Total", "[", 
          RowBox[{"outputmatrix", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", 
             RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
           "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"wavelengthtable", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"nm", " ", ",", " ", 
     RowBox[{"A", "/", 
      RowBox[{"(", 
       RowBox[{"nm", " ", 
        RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outputmatrix", " ", "=", 
     RowBox[{"LSCoutputlistdirectside2", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sidespectrafluxdirect2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"Total", "[", 
          RowBox[{"outputmatrix", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", 
             RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
           "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"wavelengthtable", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outputmatrix", " ", "=", 
     RowBox[{"LSCoutputlistdirectside3", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sidespectrafluxdirect3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"Total", "[", 
          RowBox[{"outputmatrix", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", 
             RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
           "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"wavelengthtable", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outputmatrix", " ", "=", 
     RowBox[{"LSCoutputlistdirectside4", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sidespectrafluxdirect4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"Total", "[", 
          RowBox[{"outputmatrix", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", 
             RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
           "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"wavelengthtable", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.873556600289338*^9, {3.8735630064530582`*^9, 3.8735630438347187`*^9}},
 CellLabel->
  "In[2148]:=",ExpressionUUID->"e1c9ea54-df27-4ca7-b179-2d80d2ff1977"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect1", "]"}], ",", 
      RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect2", "]"}], ",", 
      RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect3", "]"}], ",", 
      RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect4", "]"}]}], "}"}], 
    ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"in", " ", 
    RowBox[{"W", "/", 
     RowBox[{"m", "^", "2"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8735566030923967`*^9, 3.873556613234578*^9}, {
  3.873556761645965*^9, 3.873556768421068*^9}, {3.873559642999185*^9, 
  3.8735596475952272`*^9}, {3.873563049563286*^9, 3.873563064064369*^9}},
 CellLabel->
  "In[2156]:=",ExpressionUUID->"a2b5cf47-8e72-4466-9f8a-a1942d232d1a"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1nuUk9W5x/EMioYujkSRGpGFQaFGBnrSA9Zg8fDMFGq0LAgw0EhRo9wC
hU64CBEQAwIGyWWPDjRcxNABDCgSLJaAICkwEhiBgCiDgISLGLkGKTgCtmdO
s886zTf/zPqsZ1/f397vO+1eqOw/vInBYJhyi8Hwv3//9fNOEMO///ywgmNw
Ak7BGTgL52HDxGKbYAtsgwV2wm7YC/thBcfgBJyCM3AWzsOGF4ttgi2wDRbY
CbthL+yHFRyDE3AKzsBZOA8bJhXbBFtgGyywE3bDXtgPKzgGJ+AUnIGzcB42
TC62CbbANlhgJ+yGvbAfVnAMTsApOANn4Txs8BXbBFtgGyywE3bDXtgPKzgG
J+AUnIGzcB42vFRsE2yBbbDATtgNe2E/rOAYnIBTcAbOwnnYMKXYJtgC22CB
nbAb9sJ+WMExOAGn4AychfOwYWqxTbAFtsECO2E37IX9sIJjcAJOwRk4C+dh
w7Rim2ALbIMFdsJu2Av7YQXH4AScgjNwFs7DhpeLbYItsA0W2Am7YS/shxUc
gxNwCs7AWTgPG6YX2wRbYBsssBN2w17YDys4BifgFJyBs3AeNrxSbBNsgW2w
wE7YDXthP6zgGJyAU3AGzsJ52OAvthE2wWbYAlthG2yHBXbATtgFu2EP7IV9
sB8OwAqOwjE4DifgJJyC03AGroezcA7Oww2wYUaxjbAJNsMW2ArbYDsssAN2
wi7YDXtgL+yD/XAAVnAUjsFxOAEn4RSchjNwPZyFc3AeboANM4tthE2wGbbA
VtgG22GBHbATdsFu2AN7YR/shwOwgqNwDI7DCTgJp+A0nIHr4Sycg/NwA2x4
tdhG2ASbYQtshW2wHRbYATthF+yGPbAX9sF+OAArOArH4DicgJNwCk7DGbge
zsI5OA83wIZZxTbCJtgMW2ArbIPtsMAO2Am7YDfsgb2wD/bDAVjBUTgGx+EE
nIRTcBrOwPVwFs7BebgBNswuthE2wWbYAlthG2yHBXbATtgFu2EP7IV9sB8O
wAqOwjE4DifgJJyC03AGroezcA7Oww2wYU6xjbAJNsMW2ArbYDsssAN2wi7Y
DXtgL+yD/XAAVnAUjsFxOAEn4RSchjNwPZyFc3AeboANrxXbCJtgM2yBrbAN
tsMCO2An7ILdsAf2wj7YDwdgBUfhGByHE3ASTsFpOAPXw1k4B+fhBtgQKLYR
NsFm2AJbYRtshwV2wE7YBbthD+yFfbAfDsAKjsIxOA4n4CScgtNwBq6Hs3AO
zsMNsGFusY2wCTbDFtgK22A7LLADdsIu2A17YC/sg/1wAFZwFI7BcTgBJ+EU
nIYzcD2chXNwHm6ADa8X2wibYDNsga2wDbbDAjtgJ+yC3bAH9sI+2A8HYAVH
4RgchxNwEk7BaTgD18NZOAfn4QbYMK/YRtgEm2ELbIVtsB0W2AE7YRfshj2w
F/bBfjgAKzgKx+D4PLlzy+hfNOs9vse/nEA9CafgNJyZJ0N3WxYlf6HHq0c9
C+fgPNwAG4LFNsKmoHzwuzP3PGacWZjfjLoFtsI22A4L7ICdsAt2w56g/P7T
/t5nMuMK6/UGZU3o6OzBddq+oHT0jRkz+BNtf1B++WxNu2f+ph3AeCoou9Yu
uDh6g65HUY/B8aA4t3d9sTo+Q+cflIG1rfe/U6P7J4Oywva7c1uWaqeCcqO6
8oFtI14vOB2Uz7ffc+bn1+cXnAnK8GsHvza7dL0+KF+uKnl+t1M7G5Sn99f2
GjinquBcUCqiY1/qVq7r+aDMX9r3w+XTdL0hKI/89HI82WVRwYaQ9G/drGx6
J93eGJLKt3bs+cy/tGBTSBaOkgVDR+n9mEPyxsX15xcOW1awJST33/HRoM0t
dH9rSOZNGTv1jt/r/dlC0vSF59b2HqTnt4dkkyV5LL9C709C8vLq8hc/a/Ne
wY6QeN7csaTNIl13huTZuV1bfPOIXo8rJDvnTOj+eVPd3h2Skbs+HDYpoNt7
QrJ39x/rfr3qHZ1/SBZX3LzQopXu7wvJitSZzflSvX5/SP6zbctWW2/V9UBI
ul5f3rTmgXUFq5Ds237m4tayv+j8Q9I+WNO8xcpVBcdCcmfF4PL+p9cUHA/J
V+Fr6zuY9PiJkDTbMWTgicoNOv+QDC0dka+YW6/zD8ntrV47tPuBgzr/kAw5
edl5sOwznX9Idi/utW7a4QM6/5D8dKLvZ77f1Or8Q/JQbfnbk7/9Uucfkh7p
s5Erk/fr/EOybe3ee9cYdL0hJC98PG784/mjOv+w3NVpZUPL3x7T+Ydl+icd
AhuePaTzD0vp8w/222/W/c1hWdI5cO8Tm7/Q+YelatdDZdufOq7zD8vq679O
7v0gq/MPi73M2G3PTD2ePSwrHh3c56xdzydhOTvsl7e07Kb7O8LS60Vz7y2v
6P7OsAw/uPDy0iHarrB8Mva6cXK7Uzr/sOS2Xvj4sUE5nX9Yho3e+7f37bru
DcuCkp2eih90f19Y9pW9df6x83r//rBY2za533HXWZ1/WJ5LBLN9oid1/mH5
YXfv5TtdZ3T+YdlQnu17qvZbnX9YTtbsnjvoO12Ph+Wjq1NLmi78RuffuP9v
H/zDwh66fTIsfS8feX/EzdM6/8b9LPyDbcDtl3X+Yem38F7347ee1/mHJWM9
EXykTo9X3/i8n7iQPX3wnM4/LJcGq9WP5fT6c2Hx9ix74XvrJZ1/WNrfFznc
/6qevyEsX8VSX55NXtD5R6TD4SErFo+9qPOPyLmrl2tvXNLzmyJS7RoR73cx
r/OPyH8f3xhvXaPHt0RkwfAB3/WequvWiCQu1R4Y5NF1W0TGnSrf2Ge0tj0i
j5Y0Xdm2Su9XIpK/EKru2kmvxxGRY6tOl0xured3RmT/K6/9WNZFP19XRE5X
dtw4aLzerzsiJX097/44TdsTkZf6pw+1tOnn643IzCNd1oVG6P37IrJicrNV
vf36+fkjYrk49dzN1nr+QETuGxCtOX3jO51/4/7uun35u630/qIR2dZlc7/V
R/8v/4hU/PjQRyuv6PXGI3K/5eaIUqNeTyIim9ZllzSZoJ9vMiLL/jS/9a82
6PlTEemU+9nr0b/q/umIVE783Px+rd5vJiId/+yfPWjU1zr/iEwefP0nTRz6
PGQj8vRXXZ44ek07F5Hl4+rqBjn1/PmIfHh3evz4NXr+hogMX3v+48te/XwM
Sg7PqMnMNevxb1Xy15K9o2fX6rpRybZVVz62LdT3obmSRVtmhPcv1jYp6fWP
0g7reun7drcS7/FHh+/xnNDnRcknuycteWCGvn9tGtt3uPfqnmO6blHSY8JA
T5kcLri9ki/+8si1RSf0/bQq8d1eUr+lj3YnJbfVvvH99yW6v01J8M1vr383
SrurkukvTTO/ntDvF7uSh9tffvXUSf3+6a7k5NH75/7ZntHnT8msTcZ3DlzR
9Z5KBs/rP96x7HN9HpU8GGlVPrpO13sr+bHbfUPHLtujz6eSfqVtV8ydq9+H
FUp++82TM3bM3KfPq5L1Zyc5+jy1t+AhSk44ylrc1lG/391KqkdVnm09dXfB
w5QYr1bWde5bp8+zknGvBgevPJ4ueIySigdz73bPbNfnW8mjI92Tth7Q7Sc2
9r+weHr5W5v0eVeyc8SBzjsG7Sx4mpJnTp+tLe++S59/JS3nVB86vm1bwbOU
lPSYUrZmnx4/oORabWmobfWWgoNKBi5v327lkxv1/VDS5akj6Ykh/f2sVjIn
E2i3bWNS35fGfJov/ees594ueEnjeA//5osbXfR+YkrWOk72c87/sODlSma/
eizasnKzvk9KIvmSif3O6e/9e0q+2TDlSGrVVn2/Gvu/faXucPyDgtcrKdvS
+t3bovr7n1RyaMKNn+9ao7/nm5U8fs+qjlVe/f1OKZn2fI8LL4/W3qGkw7zL
88cO004r+eqHgCU39U8Ff6rkbP3IurIOK/T9VDJ0yJYmD0e0Dzbmvfq/bhnV
ebG+r0pKf2g24MhP/ljwUSWdh116a9Mt0/X9VWL499/pxvN3aELsyQU1+j4r
ibfoW1n+H3q880ra9hvqPXabdl7JAFl056iAbv/3xvn+8UbJ44fH6vveeB9L
jXdN6abXfxPzGarkn52O2Up3vKzvf1Vx3Qg3r5IFNcNntDuo/380oX53lRyv
WDmy+3Nv6vuPehvYArevkk7h91MrZ+v1W6vk8OGxHd5x6PE6VYksK9n39WS9
Xhv6d62SltYx0S6/0u3tqHeHBe4JO+DesBOuqJLKaM/s2nv0/C7Uh1RJ8un5
I0/doetu1IfBHngM7IUnwj54GuyHZ8EBOAgruBqOwkvgGLwcjsPvwQl4PZyE
N8MpeAechj+FM/BBuB4+Cmfh03AOPg/n4b/DDfBN2PBGsW+FjXBz2ATfDZvh
NrAFbg9b4U6wDe4K2+HusMA9YQfcG3bCFbALHgK74WGwBx4De+GJsA+eBvvh
WXAADsIKroaj8BI4Bi+H4/B7cAJeDyfhzXDq//0/xyVHJQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
enwgIn26GeMWTfpC5x+R1te+0TC7+rTOPyKXH/NnK/Z8qvOPSJcntoyp/1D3
E4/IhKF/nHv9OO1ERFK79l0TfEM7GZFzN93V5f61jTr/iFxltG9/4QtdT0ek
pkt4/dDlp3T+ETnYd+A1jk90v9mIdDg8oNUjAT0/F5Fnrli5bGQn3U8+IrMW
r3vqswlndP4RaejqHnv1maLOPyK7Mne4Xxv0tc4/It/8Y23Vhg369xlRaf1z
V3XVeL2/JSpffblxp2vROZ1/VH7Vf+ziXi3O6vyj0vhM6xl7EtpmVD7onqlu
u14/P1tURr44ftCRyXq+PSp/7NXx9oHTdT+OqEwyj0z4/ubzOv+opH/e13FL
O92/Myo3n3XseOSWr3T+Udk+t/qVeW30eHfz/se/sW+5WvfriUpu+dTuvc/r
9b1RifR+6L4VQ3TdF5WGc9M/3XZJ1/3NPmmsz63/Uucflf37b7m5Ma3rwajc
235//19v1vurqCTnL9z+9Fz9e2NReWD4W7bXb9P9xKPSud4x54FGnU8iKh3e
yz9YPKrzS0bljfX5uiuf1PNTUTG37f76xfr/5B+Vl7YV/9R1tnYmKq9duXXk
k2/o55GNyreDzt89+HFdz0XlQM2iCQut+n7lozK9UPVNj9f1eShEZeeSSdGb
2un9i1FpM671TyZG9HlvisqxAYd/1DBQ1w0lCy/9rMeO4/o+XqVk52tXt6le
qO+PRUlP783Dvq3T67dUMntVtPUHa/R4q5KPHx52wNik179BiePEgi/Wbczr
86Lkwst/vnRdfz2+jZKYdfyYo1t13VQy5r5fPzDkCV3vqOTKvbE3L13Q7wub
kkuNR470ek6/n7oq6dt284glgxv0+VKy0nF0+fV1enxPJV3nrghPn6n7dSjZ
Haiu3tRWv5/uUZKofnrQ3Nb6fSpKrhgw78GeSr/Peiu57d4d49/xf6TPo5Lp
I06MXjX6rZL7KZk26iNnw3/Gu5ScO/ji+MrPdpVcqaRuy96ltgX6fetW8u6G
Fhf/8JR+3w5V8miLHV/eequ2R0njR8subbq4v+SRSs73+ecQo/I9fZ6VbFja
33P36XdKrlLyybzZLxR26fV9Sjb3uuGHn6f3ljxRyZYDl+/cntD9+pWsPtXq
4U590iXXKOl17vie4d326POvJD51UCuZvrXkmUqesQ/uPPb+g/o+KPl8b/sb
T+z/W8mh5vyGnZo24b039f1Q8sUfbn8psmFHyQuaz8ftDYesAzfr+6Kk5WHr
ZV9//f9Zp+R0eP5Xnjo9Pq5k+Yji5weX1pe8vDn/Xfu6zP3L6/o+KZnlvS73
58ciJa9RMuThOwftnbVR3y8lJytX7PAt1uPrlYTGvXNmQf0Wfd+UvDW97Sx/
h3Ulb2s+j9mXO42oXKzvn5L2A9K/e/bj1SXvbu6/z+m/t1u6Xt9HJesLa9p7
HtX/9283958bdaBXJ/3/nlXiV5bTnW96uuRDSupX3/GD0d1e1fe1ef85F/dd
6Kx9VMnA1v/s19Kjn0deifHfn5NKrnlw6+Glk/T6hebz/z/9t1adDZfciPFF
+ALcpKTmQHJXj/fHleZ/p+R/K3bcUjdlvr7/tXK56zF7l926flWtXOgqR7ps
17bUSmhA64PdN2m3rC1f31orZuPuOb0S0/T9r5VPKleOume4Xr8C49vUyvDX
jejE+Xo9s1bm17a/NhTS7ojxNrgrbId71sr1tqpYj7v1/g7U74EF7g074X6w
C66E3fBQ2AOPhL1wFeyDJ8J+uAYOwDPhIByCFbwAjsF1cBxeDifgNXASrodT
8DY4De+GM/DbcBY+BOfgo3AePgkX4Ea4CF+Am+DvYOP5cl8FW+CWsBW+Aa6A
28Am3BG2wV1hO9wTdsD3wAL3hp1wP9gFV8JueCjsgUfCXrgK9sETYT9cAwfg
mXAQDsEKXgDH4Do4Di+HE/AaOAnXwyl4G5z+f/8LbDso3Q==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1nuczNX/B/BZoU0uI2Siy6eyjCijxJDLm1WG2MZ9CY1bpkXGJUZu4xKL
uZzPJzRyG7EZ2hhZGSxNv3YZbHZcYsqlcdkMloaVxpK++2vePR7Na/7Zx/Px
Pp9z3ufzPu/P2edHTOgzupJKpfr4EZXq///+87NMJtV/fzawAHvAPnAAHAJH
wDGwakqy1WAJrAMT2Ag2gS1gG1iAPWAfOAAOgSPgGFj1UbLVYAmsAxPYCDaB
LWAbWIA9YB84AA6BI+AYWDU12WqwBNaBCWwEm8AWsA0swB6wDxwAh8ARcAys
mpZsNVgC68AENoJNYAvYBhZgD9gHDoBD4Ag4BlZZk60GS2AdmMBGsAlsAdvA
AuwB+8ABcAgcAcfAqunJVoMlsA5MYCPYBLaAbWAB9oB94AA4BI6AY2DVx8lW
gyWwDkxgI9gEtoBtYAH2gH3gADgEjoBjYNWMZKvBElgHJrARbAJbwDawAHvA
PnAAHAJHwDGwamay1WAJrAMT2Ag2gS1gG1iAPWAfOAAOgSPgGFg1K9lqsATW
gQlsBJvAFrANLMAesA8cAIfAEXAMrJqdbDVYAuvABDaCTWAL2AYWYA/YBw6A
Q+AIOAZWzUm2GiyBdWACG8EmsAVsAwuwB+wDB8AhcAQcA6tsyU4Fq8EasATW
gnVgPZjABrARnAk2gc1gC9gKtoGzwQLsBnvAXrAP7AcHwEFwCBwGR8BRcAwc
B6vmJjsVrAZrwBJYC9aB9WACG8BGcCbYBDaDLWAr2AbOBguwG+wBe8E+sB8c
AAfBIXAYHAFHwTFwHKyal+xUsBqsAUtgLVgH1oMJbAAbwZlgE9gMtoCtYBs4
GyzAbrAH7AX7wH5wABwEh8BhcAQcBcfAcbBqfrJTwWqwBiyBtWAdWA8msAFs
BGeCTWAz2AK2gm3gbLAAu8EesBfsA/vBAXAQHAKHwRFwFBwDx8GqBclOBavB
GrAE1oJ1YD2YwAawEZwJNoHNYAvYCraBs8EC7AZ7wF6wD+wHB8BBcAgcBkfA
UXAMHAerPkl2KlgN1oAlsBasA+vBBDaAjeBMsAlsBlvAVrANnA0WYDfYA/aC
fWA/OAAOgkPgMDgCjoJj4DhYtTDZqWA1WAOWwFqwDqwHE9gANoIzwSawGWwB
W8E2cDZYgN1gD9gL9oH94AA4CA6Bw+AIOAqOgeNg1aJkp4LVYA1YAmvBOrAe
TGAD2AjOBJvAZrAFbAXbwNlgAXaDPWAv2Af2gwPgIDgEDoMj4Cg4Bo6DVdnJ
TgWrwRqwBNaCdWA9mMAGsBGcCTaBzWAL2Aq2gbPBAuwGe8BesA/sBwfAQXAI
HAZHwFFwDBwHqxYnOxWsBmvAElgL1oH1YAIbwEZwJtgENoMtYCvYBs4GC7Ab
7AF7wT6wHxwAB8EhcBgcAUfBMXAcrFqS7FSwGqwBS2AtWAfWgwlsABvBmWAT
2Ay2gK1gGzgbLMBusAfsBfvAfnAAHASHwGFwBBwFx8BxsGppslPBarAGLIG1
YB1YDyawAWwEZ4JNYDPYAraCbeBssAC7wR6wdynV3pfV8rGekzr9Yx/E/eAA
OAgOgcPgCDgKjoHjYJU92algNVgDlsBasA6sBxPYADaCM8EmsBlsAVvt9JJ1
3LjBByYm6mOzU8Hr1bPyWq5IONtOLfc22jAin+PCToe2rbiZtWtuwm47tX64
PmXqNxz32Onzqrd/nv+1nLDXTsYfWn20zMvjfXbqX9jg2KYNbL+dcnQDr+9b
y+MDdvL6131/aiXPF7TTltW5vW8vY4fs1HWjfqVasMN2ijZMWdFyKTtip0HH
Ct/sv5Dnj9qpn3v89LZdliQcs9Pyte/s3DiTx8ftFL4StBf8lJOwykF9GjzW
eXbzzxNOddD8r26d7JbGVjto1FrT8HrP8nwaByk380pXjlqfsOSghhdWrTm4
a3nCWgcVt2m0e3kqP69zUJUR723rOYDX1ztoj+Q/F8vh9clB4RXPPVfFw88b
HHTB5+//QunihI0OurT/85a1StiZDnrq0OBVWzry+iYHlY6XjfG2bLODAtcn
fnnr3Q0JWxy0qt+DG7XqrU3Y6iDp2Kc9SqqzbQ5q8Wydet9V3sr1d9CZnZHu
ax58zfV30OExqhtzRu/k+jvIStelS/M2cf0dFL3dcM2tQRz3Vuz3420POp/l
530OWjHAUav1SbbfQWuN87KKxv/E9XdQ2Wg9OaOHuf4Oqnfrcplq+2muv4O2
ps0a3lx7lOvvIFH/9LnmpjDX30G7o+qCI8NCXH8HzWhXe+HivJNcfwe5zOGm
62+z4w4aWD4p0GPeKa6/k+T0pbdNV89y/Z0U3F6ppmc156d20opme4svpHNc
46SCrDF/pizi/CQnTZ+Qnnc5wvNrnVTLUuWVDxZc4Po7qa6nJOPs2AjX30na
m73KRvQ/z/V30ktfvtUjNcLzG5w06vOs8A91OD+jk5b3/UD+cPhFrr+TOnXY
s6VLxmWuv5Oc6es+3H2f42YnDdizs3XJGxy3OKnmyfAr3Qb+xvV30huR8h83
/sZxm5OafrO9Y8aoK1x/Jw0Jrz3xYF0J199JfZ6o/mPDvpe4/k6a32TssVaV
Ylx/Jx2blHWwo5nn8zqp67A++79of5Xr7yTHzSH1Z3bl+fxOapz18JseQzmf
gJN6+bcfb3vwBtffSdZP2tXJ6sT5hJyUU2nX8OIh17j+FfvtUNxGM5odcdJK
0d1gk3/n+lfk03RrWUDPjjnp1fG19n8i8/xxJ12e8v3mFQducv1dFJ50d1Ue
Xef6u+jQjar7R+Zz/moXmautPFm0j/ercdHbA57PXnSL85Nc5J7l7nNJiXL9
XfRdn1uudjs4rnNR3d8mVZX/zVfvoj/2VTl1Ykkp199Fi8qdAzel8XqGivFH
D24uKWQbXfRW73Ydf5zP+WW6aODR+N0ln3Lc5KKUkc1/mufn92l20UeH+yv1
pnK+FhfNqfFwt8rI61tdtHli02XS7TKuv4veL/HePTWc30e2i+YuKc2p+RWP
Fy4a+1qrF+q9yO/P7aIy2+/vRM+wPS6yZlTu8zXx/r0uevBCWnzJv3Gfi9J6
dZg24U/O3++iwpRW7xvq8vwBF2l/nJDuGcnnI+giw29V/7hU7d/6u6jR4rT6
Y+rz+Qu7aESd+3V/O8zrRSrGvz1tZ/eneHzURQcup0+3fMbxmIs2lv/dLfAI
rxevmG/Qq1npr7NVgjrXvzp1Rn9+f5UFla/Z4X+uEb/fVEH+zBffnH6W+7m6
IPmx1x4ezz/H50PQ8MFlg4r3cbyuoEJbi13/N4D7USOopWg1ZKLE+3ta0FfP
vf3hySDHJUHnGp8ZcX3BmYQbCcq9MPnblzwc1wrqNDDw3uHjHG9esd7Y/u3K
H+d+0wlq/sSjL5/Wcj6tBFV+Is2qKuB89IJ8ltduBlew2ws6cnPNvm/H/Pv9
EXRnUUrnupV/SbiroKcKMuY+nc7rGQRpV+xqYr7I36OegtJeLHpl8KACPp+C
Xn8m93a1qQcT7ifI1t3j+GVkIZ9XQadvzetqrMrfxyGCJoV2pLf5nr/nJkHr
f6j9RumUIwmPEhQaea9z2y7H+DwLGuBqUvzejOKExwnKLPJOHOrj771F0OUx
S0qvjeT7Y4qghre04+qHgnzeBd08sXZat7o8/0xBk1cOPXSvKdsmqM7YbZfX
f8v5LBBU1LL04ZpTAe4HQS0q77s37eD3CdsFkfjyZ10/jgtBc39RgoqT811W
sd/txT12neLxbkHDNlf7yzqKx6+uOE/fbHpm12m+Lz2C/j5WMqrgw7yENwp6
8n7l3Oo/bON+EvRosxP3qm/dlXCuoPPBvTvGW9g+QctOvHpB4/s24byK8/XG
EdO+VTu43wQ9ZjOUWAK+hPMrzqfmYu/SFuu4/yrqPbDyUauf4wWCNg4faR/+
wW7uR0GDDh7vve/wpwkXCdo1/2fVwW5O7k9B49Wvv5ziq5PwSUGue6uHZzzC
84cF9c3oFDd24v9HzgrqUNz/u9LNC7l/BV3qeKfBlK08/2VBy48ffaJwMzsq
aOiD2kFd+9kJlwrqcvV7o3Peh9zfghbfSetRuIrH3xF06vdfrx6ZzPG4IMPF
8NDT2bz+A0E53Z9c1rYD56uSSS5f3Oi7zp9x/8tUwxJ8yqfleKpMzWburf3R
s+zqMnXM79C9a+Es7n+Z7ly5VlQn9W7Hf1xXpvuN+x65VomtkUl6EH+t4K8/
En5aJu35Ki3Gb+bnJZmaFE9o2Xgg599IprOByb8Mu8njtTINlluc6XyV3Vym
LjmBDk0us3Uy9W09S1XrV3YrmfpV2/f8vZ/Zepm2uVdTy+m8XnuZzOkvTz9Z
zHGS6fyvdXMLD7O7yjTnpZutdxeyDTJ1X6LRbAuwe8q04sqdXpv2so0yjdhS
cmr9t+x+Mi32Z2xfu52dKVODKcvPrMllD5Hps91Sv3Wb2CaZOp/PfGrDF+xR
Mk3auqnp5jVss0yRsdb5293scTKVH2mTlv8p2yJTh7t9axxysqfINHde+3bh
xWyrTKOnjdhydQF7pkzrDPohf81h22R696eWGXVmsBfI9MX7BbObTWVny7Tx
v7aDhUwb/utlYLdMX/7Xq+F5D3gjPO8F58qU81/7IJ4H8/nB+TA+APMVwPgg
vI8iiIdgvpMyFbgk8+n5fP7DMu3xz+w9X/4z4bMylVwIt2uxLp5wRCb14683
OpN7L+HLMlVtJddYtKc84ahMLYbeuPtq8H7CpTI1Xtg9cv6nBwnHZOq9LefQ
kkt/JXxHphnhlB2tbz1MOC7TxJRhqy8+/DvhBzJl1DvXpdtCFfe/QheaLm3z
TI0U7n+FhnVs27zsU3aqQmV9rkiHGlTi/ldo/Jjl9datZ6sVemRmerWPtI/w
/a+QW9x62GMbW6NQnZx1ZVLrynz/K+Td3St6N58tKfT80ftni9KrcP8r5L+4
+dgXh9lahXr9OfCAtXdVvv8VOvh41b0ZYbZOoaFS3rZG7z3K979Ct1uN2Fhe
wtZX5NtdvTI0LpX7vyLfYfsdX5axSaHZk8bNm/nxY3z/K6Re1GBan5RqfP8r
tGlVcKw2m92zIl/fVNPDmo/z/a9QXkGj/ieXs/sp1PPn4923PF2d73+FDtyw
dbRtYA+pyLdSi9cGvFSD73+Fwk+ea9J8O3uUQmObLX26kr4m3/8V+VLb2uH9
7HEKzep3pcrWN2vx/V+R7wfLy+cXsaco9MHW5+u/ms+2KnRCqrn62lfsmQqt
nLB33ter2LaK99XAUfDxUvYCha5NvTq4zwx2tkJDtrbt1Gos216x3oGrWdK7
bKGQZZ359JNvs5cpZLvfZHb9N9huhXJmrc58oRl7tUJvbe1gatOQ7VFow1+f
OAc8zt6oUPsDt8/Ouc/79Sq0853Kb+64zs5V6NFjHQKxM2yfQi0mpxn0Rey8
iv317XpqcT7br1DvhY1HleSy8xX6XPPu9R5r2IGK/T8xZfQeR81O/wOCitFC

      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1nuUU+W5x/E9SCGtgClVG0ElCkKoqIFyCeqBR0QcBG2AYTUcoMSKNShI
BKRBphjuAXJ5h2tAxCCC6RJqkBGjDDQKlIgoOVwkokgUkHApBJwlQSmeOc3r
Os03/2R91vPe9v7t9937tj+OH/xkI8MwXrjGMP7v/98/70Qx/vPnhxUcgxNw
Cs7AObgAG5PKbYatsB0W2Am7YS/shxUcgxNwCs7AObgAG8+X2wxbYTsssBN2
w17YDys4BifgFJyBc3ABNiaX2wxbYTsssBN2w17YDys4BifgFJyBc3ABNv5c
bjNshe2wwE7YDXthP6zgGJyAU3AGzsEF2PCV2wxbYTsssBN2w17YDys4Bifg
FJyBc3ABNqaU2wxbYTsssBN2w17YDys4BifgFJyBc3ABNl4otxm2wnZYYCfs
hr2wH1ZwDE7AKTgD5+ACbEwttxm2wnZYYCfshr2wH1ZwDE7AKTgD5+ACbFSX
2wxbYTsssBN2w17YDys4BifgFJyBc3ABNv5SbjNshe2wwE7YDXthP6zgGJyA
U3AGzsEF2JhWbjNshe2wwE7YDXthP6zgGJyAU3AGzsEF2Hix3GbYCtthgZ2w
G/bCfljBMTgBp+AMnIMLsOEvtwk2wxbYCttgO+yABa6EnbALdsMe2Av7YD8c
gBUchWNwHE7ASTgFp+EMnIVzcB4uwEXYmF5uE2yGLbAVtsF22AELXAk7YRfs
hj2wF/bBfjgAKzgKx+A4nICTcApOwxk4C+fgPFyAi7Axo9wm2AxbYCtsg+2w
Axa4EnbCLtgNe2Av7IP9cABWcBSOwXE4ASfhFJyGM3AWzsF5uAAXYWNmuU2w
GbbAVtgG22EHLHAl7IRdsBv2wF7YB/vhAKzgKByD43ACTsIpOA1n4Cycg/Nw
AS7Cxqxym2AzbIGtsA22ww5Y4ErYCbtgN+yBvbAP9sMBWMFROAbH4QSchFNw
Gs7AWTgH5+ECXISN2eU2wWbYAlthG2yHHbDAlbATdsFu2AN7YR/shwOwgqNw
DI7DCTgJp+A0nIGzcA7OwwW4CBtzym2CzbAFtsI22A47YIErYSfsgt2wB/bC
PtgPB2AFR+EYHIcTcBJOwWk4A2fhHJyHC3ARNuaW2wSbYQtshW2wHXbAAlfC
TtgFu2EP7IV9sB8OwAqOwjE4DifgJJyC03AGzsI5OA8X4CJsBMptgs2wBbbC
NtgOO2CBK2En7ILdsAf2wj7YDwdgBUfhGByHE3ASTsFpOANn4RychwtwETbm
ldsEm2ELbIVtsB12wAJXwk7YBbthD+yFfbAfDsAKjsIxOA4n4CScgtNwBs7C
OTgPF+AibMwvtwk2wxbYCttgO+yABa6EnbALdsMe2Av7YD8cgBUchWNwHE7A
STgFp+EMnIVzcB4uwEXYWFBuE2yGLbAVtsF22AHLAilOeOarIzUTev/blag7
YRfshj2wF/bBfjgAKzgKx+A4nICTcApOwxk4C+fgPFyAi7ARLLcJNsMW2Arb
YDvsgAWuhJ2wC3bDnqAM3zPYOzLzXOl58gZl5oHd6aYb55fsQ3t/ULr/Yc1t
I9/X7QNB6byl3Zo/1k0vWQVlQ9Ovn7Qu0v2jDe2vrq6Y/Jaux4KyosnFz2Zu
0I4Hxbm96/OL49qJoLwx+fGdNc2WlpwMylr7789sXaXrKawnHZSrp2e88Myo
FaV6BvVsUPKtK5Z2XqD754LS+L14/sX+en35oFRFx03p2Ue7EJQvx1267tK9
2sWgxDO103avW1OyEZLCkrkLtu1dUrIpJBt2DTh2z7N6fHNIlo+RpU+MqSnZ
EpLPnrzu2Dc36vVZQ3JDbfXxfaN0e1tI9vZo9+4Sk57PHpJ+jw146Mbpej5H
SD6fefGuv0/VlpC4m1yuGddvld7/IWn/aq8pbba/XrIzJGPqjaoei/X6XCEZ
NbVzn6FhbXdIzo6rcRZ76vV5QpI689y6C8P1+N6Q3DjuthtOpZfr/ENyrHLr
Nc+s1OP7Q6JuOLWz1XNrdf4hyfb/sdvHXd/S+Yfk0KOpC22aJXT+IfHJGeux
Gbp/rMHhdqOat9ft4yH5Mvxd7R3m1Tr/kEzt3Oml4LUbdf4heercwszqEQd0
/iG52Hzw4a98H5acDsnjfcaq2vMf6fxD0ml2/KbGtYdLzobkyvbisPdyup4L
ycsTrnY2Ve/T+YdkmFwalHnjkM4/JAOH/uPIvl9ndf4heb3FffX/5cnp/MNy
vLX6H1Gf6fzDMm/I/Maj05/q/MPy0Lf3jG/d46jOPyxzB/b92HlE97eG5bFW
fZ8yen2p8w/LG7Ma7bXt0fPbwxL59pmWE00Hdf5hufWjfXeuHq/Hk7AsmNH+
t8tfP6LzD8uf3nnk6YqL2s6wvDNs0ITpP3yj8w/L5ZnnPFN6fKXzD0vwti+d
FX1P6vzDMqDfrmHf9jmh8w/L1arstCbDdN0Xlk/ObDy/ZP4xnX+DD4c3fbDl
os4/LBcuL3x44iv6+lRYTuQ3P/Tr+rzOPyxHj9qv3HFJrz8Wlocrutz7izN6
vHhYuixe9f3uR0/p/MMS6932aPV63T8ZlnebfNgkv1SvJ9XQfvabKz+99bzO
v+F+vepynFx6Vucflo1Drl8+9Gf6erJhWfJez6c+eEfPlwtL89j4Xa19er58
w/1oenKKd9U5nX9YTuYrDi5bq10Mi2vqSy2u+0HPZ0RkyV0TFjedrvubIvLX
ynGbmy/6p84/Ih9mrHfP6K/bWyLyRfMzU5o20eNZI9L6b6f+MHGwrtsiMv18
h1btVlzQ+Ufkzbh1dHCdHs8RkcGjX67Y30O3l4hc+4sBJ9Z1LOj8I1Jnrv68
R1M9vjMiJ+dtrv/hKd3eFZHYyF13zNmm6+6I7Jj60PiWQ3TdE5EVre9v6u13
RucfkduXf9hi+UW9Hl9Eeg+tG/XuMp2HPyKNtl3p1Oxpvb5ARH539+YlbZvp
9aiIHBq9uNU3jXX/aES6tLl1aHKQni/W4Btd3uGHdD0ekfHn3p/7+X26fyIi
te06tH15g84vGZE7I9t9U1r8lH9EJhjWJc9u1u3TEblly5CZ/4od1/lH5Ffr
bm5c/4nOJxuRc1OGPPzOpZ/yj8jwmR2a33ta7498RM7cVDV38GztQkQSv3zp
0JHter5iRPbfNGDnthf1/TGUTN0y7NO/P6jbN1ayvv27t85cqPeXSUmL+96q
br1Jr7+Zkg2Tm97d4bqv9fOhxDjZc3fXKr2e6xv8yN6B0Uf1/bUosURHJobO
1v1vVnLNqhYHJzbW/a1Kvqt/bll/mz6f2inZcmDr7Y/fpa/fpuQH869Or7xW
78dOShzLhnXs1ln3tys5ffqBHYMe1OdPVyUdv1M3LB6o2zuUtJw08/Cb5/X5
c7+SN6+c8zsi2tKwnsPrQ+Zv9PnXV8mTr1zt7Tm6Xz+PSk59smbX90/o83eg
kv4de3436mV9PjqVuNZs3Hpqvj7Pq5RMP/Rxv+6HdX+Xkmd3x4ef7abHH6Hk
4rSO0+b003V3w/1/9ekHvqrIlDxayaojJ67U12t7lKx99Vv7wpPvlzxWydvW
OQHfj/p89SopeLpN/bxOzz9JSfvhi2qHzavTz7uSI/G3uzw4+OOSq5X0ujq4
emN3ff1+JU1Xrz7xp8H6/TNLSUXx8uZb2u7U+0FJ9s7aNkMSun9QyfWD1Gur
z+vvGaXknlcKuUVr0iUvVpLc/UmryX226/2ixFu3sVdlmzdKXtlwvx/p//Xa
+Fa9f5R89PQ9Kx0j9fv3tYb7+2Ny/4UxSb2fGp63n19wDJmzreT1Su77TbDX
B5GU3l8Nz+fwCZvrKt8uuVZJt+bHIq3n1er9puTTQ33PtFi4qeQ6JTW1tdsP
bdDrTykpbn7rYJNl+v29Q0kqcMGzbKF2WknPf/a63d8hXPIeJf+4a2dmkFU7
o+SJEVsbdYzo9R9QIvt6r+n90UK9X5X8fNaIvQer9PfAF0qGtvzXwGbuZXr/
Kuk+7HCXcyv098pxJe990Oja76t0Pa/k8s9+t2XsuVDJZ5Vsqv9r4vk/6++J
gpIhsuKXYwKLSq5v2H//+Ss2uOW+5b99UdevKGlt2Xbryhd++v6rKW/fuEb2
rC7eclNHPb+pRjovfywab6vdDO3NNWI9u2PeA/G/6P2PuqVGKo6fP7vpv/V8
N9fIqE1GZNKicXr/14hjf9/9916jx29XI53Cf0utm63rNozXCbbDXWFHjTTf
M/zUlu76+u9HXeC+cCU8EHbCVbALHgG74dGwBx4Le+FJsA+uhv3wLDgAB2EF
L4aj8Eo4Br8Gx+H1cAKuhZNwHZyCd8BpeA+cgQ/AWfgLOAcfh/PwWbgA18NF
+ApsLCx3Y9gEN4PN8PWwBb4ZtsLtYBvcCbbDXWEHfD8scF+4Eh4IO+Eq2AWP
gN3waNgDj4W98CTYB1fDfngWHICDsIIXw1F4JRyDX4Pj8Ho4AdfCSbgOTv2/
/xeo5jhX
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{292.4791666666673, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{292.4791666666673, 1200.}, {0, 1.2466131007741785`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.873559639170189*^9, 3.8735596487683496`*^9}, 
   3.873562159783368*^9, 3.8735622865504723`*^9, 3.873563064566257*^9},
 CellLabel->
  "Out[2156]=",ExpressionUUID->"38ce948f-1304-402b-a2b7-37738ede7fe9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputdirectflux", " ", "=", " ", 
   RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"outputdirectflux", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"outputdirectflux", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect2", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect3", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdirect4", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.873563069587813*^9, 3.8735631167768717`*^9}},
 CellLabel->
  "In[2160]:=",ExpressionUUID->"13da0c10-6376-4824-9f93-103534749816"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.873563100928627*^9},ExpressionUUID->"25b3797d-e1dc-4a40-9660-\
68211c2260a3"],

Cell[CellGroupData[{

Cell[BoxData["poweroutputdirect"], "Input",
 CellLabel->
  "In[2193]:=",ExpressionUUID->"48a6a399-0d9b-4f9a-990f-e583cdcb10e2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQLbn7DD9DQbEDAxRozNke+SC8BM6fG75oi2NwKZyv
c1Wg8pdtGZw/63hjp4RKOZyfN+XTqu2yFXB+jPJz03VslXD+xp7bF1WZq+D8
J1mXdjL9RvANuX25zR9Vw/lPW4/nvrlTA+dvPnTU8uexWjg/vuRYYPaaOji/
iOF4VdzSejjff/nStituDXD+zN3pEbuOIPhBXNoXghwa4XwJqw1/pm1G8AXD
t26cbdAE54uH1kj7LEXwAx0O8+5Vbobzf6VyL3swH8HfkCP6eb1wC8L+hPkn
7Cci+P2mr4Oq2Vrh/C8uFs2ZlQh+ryOrjcQ3BN9YfsrKoqw2OJ/n1aL5vS8Q
/JD3m6yjU9rh/JVXW3quXEfwDVdeS+UL7YDzj8W++vz5JIJ/2ue/eo9NJ5zP
rDnlyZMdCL7Hs1ehL3W64PwDEw76r1uF4LvKRP2TU+iG8y0ffQ5ymozgJ07l
NVAT6HFYdak8cubtRvtpmi8Pbm3pcdh/UWKv7ekZ9v9WudxhZe51OF6x5oGJ
62Z7XQPVGS9Uex1uTX61fPWN3fYAWTiz/w==
                   "]], 
                  
                  LineBox[{{1078.010205217029, 0.10877487992782112`}, {
                   1078.7289654323297`, 0.09910505157943346}, {
                   1094.3661751339644`, 0.027896092171073715`}, {
                   1108.9622256966147`, 0.01828748193330533}, {
                   1124.7772866118064`, 0.000020467377837985118`}, {
                   1140.3045782185225`, 0.000020713231651455362`}, {
                   1154.7907106862542`, 0.000035326195794437345`}, {
                   1170.4958535065273`, 0.00005110365660052257}, {
                   1185.159837187816, 0.000060027411625966195`}, {
                   1199.9999849322035`, 0.00005827641744008158}}]}, 
                 Annotation[#, "Charting`Private`Tag$17378831#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {311.0000000000007, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {311., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{311., 1200.}, {0., 0.10877487992782112`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"311.`", ",", "1200.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQLbn7DD9DQbEDAxRozNke+SC8BM6fG75oi2NwKZyv
c1Wg8pdtGZw/63hjp4RKOZyfN+XTqu2yFXB+jPJz03VslXD+xp7bF1WZq+D8
J1mXdjL9RvANuX25zR9Vw/lPW4/nvrlTA+dvPnTU8uexWjg/vuRYYPaaOji/
iOF4VdzSejjff/nStituDXD+zN3pEbuOIPhBXNoXghwa4XwJqw1/pm1G8AXD
t26cbdAE54uH1kj7LEXwAx0O8+5Vbobzf6VyL3swH8HfkCP6eb1wC8L+hPkn
7Cci+P2mr4Oq2Vrh/C8uFs2ZlQh+ryOrjcQ3BN9YfsrKoqw2OJ/n1aL5vS8Q
/JD3m6yjU9rh/JVXW3quXEfwDVdeS+UL7YDzj8W++vz5JIJ/2ue/eo9NJ5zP
rDnlyZMdCL7Hs1ehL3W64PwDEw76r1uF4LvKRP2TU+iG8y0ffQ5ymozgJ07l
NVAT6HFYdak8cubtRvtpmi8Pbm3pcdh/UWKv7ekZ9v9WudxhZe51OF6x5oGJ
62Z7XQPVGS9Uex1uTX61fPWN3fYAWTiz/w==
                   "]], 
                  
                  LineBox[{{1078.010205217029, 0.10877487992782112`}, {
                   1078.7289654323297`, 0.09910505157943346}, {
                   1094.3661751339644`, 0.027896092171073715`}, {
                   1108.9622256966147`, 0.01828748193330533}, {
                   1124.7772866118064`, 0.000020467377837985118`}, {
                   1140.3045782185225`, 0.000020713231651455362`}, {
                   1154.7907106862542`, 0.000035326195794437345`}, {
                   1170.4958535065273`, 0.00005110365660052257}, {
                   1185.159837187816, 0.000060027411625966195`}, {
                   1199.9999849322035`, 0.00005827641744008158}}]}, 
                 Annotation[#, "Charting`Private`Tag$17378831#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {311.0000000000007, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {311., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{311., 1200.}, {0., 0.10877487992782112`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"311.`", ",", "1200.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{311., 1200.}}, {
   5, 7, 0, {890}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJwtzSEM3IYBhWFvDTgQYBBgEOBJAQYBBgEHAgwCDgRYVcCBAGtKpQORaqnp
5nXZ6nbZ5m3p5lYBBwIMAg4EGAQcCDAoOFBgUHCgwKDgQIFBwYGCTfP3pKcP
/r/57ccffvTrIAh+9b9/9kGwrPwk+781W3bsOXDkxJnBs8WQMVNmzFmwZM2W
HXsOHDlxZvCpPmOmzJizYMmaLTv2HDhy4szgd/qMmTJjzoIla7bs2HPgyIkz
g9/rM2bKjDkLlqzZsmPPgSMnzgwqfcZMmTFnwZI1W3bsOXDkxJnBH/QZM2XG
nAVL1mzZsefAkRNnBp/pM2bKjDkLlqzZsmPPgSMnzgz+qM+YKTPmLFiyZsuO
PQeOnDgzeK7PmCkz5ixYsmbLjj0Hjpw4M/iTPmOmzJizYMmaLTv2HDhy4szg
z/qMmTJjzoIla7bs2HPgyIkzg8/1GTNlxpwFS9Zs2bHnwJETZwb14oohI8ZM
mHLNjBvm3LLgjiUr1mzYcs+OB/Y8cuCJI8+ceOHMK4MvFlcMGTFmwpRrZtww
55YFdyxZsWbDlnt2PLDnkQNPHHnmxAtnXhl8ubhiyIgxE6ZcM+OGObcsuGPJ
ijUbttyz44E9jxx44sgzJ14488rgL4srhowYM2HKNTNumHPLgjuWrFizYcs9
Ox7Y88iBJ448c+KFM68MXiyuGDJizIQp18y4Yc4tC+5YsmLNhi337HhgzyMH
njjyzIkXzrwy+OviiiEjxkyYcs2MG+bcsuCOJSvWbNhyz44H9jxy4Ikjz5x4
4cwrg78trhgyYsyEKdfMuGHOLQvuWLJizYYt9+x4YM8jB5448syJF868Mvj7
4oohI8ZMmHLNjBvm3LLgjiUr1mzYcs+OB/Y8cuCJI8+ceOHMK4NmccWQEWMm
TLlmxg1zbllwx5IVazZsuWfHA3seOfDEkWdOvHDmlcE/FlcMGTFmwpRrZtww
55YFdyxZsWbDlnt2PLDnkQNPHHnmxAtnXhn8c3HFkBFjJky5ZsYNc25ZcMeS
FWs2bLlnxwN7HjnwxJFnTrxw5pXBvxZXDBkxZsKUa2bcMOeWBXcsWbFmw5Z7
djyw55EDTxx55sQLZ14ZvFxcMWTEmAlTrplxw5xbFtyxZMWaDVvu2fHAnkcO
PHHkmRMvnHll8NXiiiEjxkyYcs2MG+bcsuCOJSvWbNhyz44H9jxy4Ikjz5x4
4cwrg38vrhgyYsyEKdfMuGHOLQvuWLJizYYt9+x4YM8jB5448syJF868MvjP
4oohI8ZMmHLNjBvm3LLgjiUr1mzYcs+OB/Y8cuCJI8+ceOHMK4N28QZXvMmQ
txjxNmPeYcK7THmPa95nxgfc8CFzPuKWj1nwCXd8ypLPWPE5a75gw5ds+Yp7
vmbHNzzwLXu+45HvOfBbnvgdR37PM3/gxB954U+c+TOv/IXB14s3uOJNhrzF
iLcZ8w4T3mXKe1zzPjM+4IYPmfMRt3zMgk+441OWfMaKz1nzBRu+ZMtX3PM1
O77hgW/Z8x2PfM+B3/LE7zjye575Ayf+yAt/4syfeeUvDL5ZvMEVbzLkLUa8
zZh3mPAuU97jmveZ8QE3fMicj7jlYxZ8wh2fsuQzVnzOmi/Y8CVbvuKer9nx
DQ98y57veOR7Dt9k/wUUG1zT
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwd1oPSGIYSBtDYtm3btm3bNhvbamPbtm3bdtrYuOe/O3Nm9nuAReImHat0
CBwoUKC+QQP9vwL6IATEYAQnBCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYxiUVs
4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCVbGQnBznJRW7y
kJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVqVKcGNalFbepQ
l3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50pwc96UVv+tCX
fvTnLwYwkEEMZghDGcZwRjCSUYxmDGMZx3gmMJFJTGYKU5nG3/zDdGYwk1nM
Zg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexm
D3vZx34OcJBDHOYIRznGcU5wklOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYO
d7nHfR7wkEc85glPecZzXvCSV7zmDf/yH295x3s+8JFPfOYLX/nGd37wk1/8
5g8Bwx+YIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7QlY4B3pRGe60JVudKcHPelFb/rQl3705y8G
MJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxt/8w3RmMJNZzGYOc5nH
fBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+
DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zmDne5x30e
8JBHPOYJT3nGc17wkle85g3/8h9vecd7PvCRT3zmC1/5xnd+8JNf/OYPAYc/
MEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIx
SUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBF
KEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1o
SjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/68xcDGMggBjOE
oQxjOCMYyShGM4axjGM8E5jIJCYzhalM42/+YTozmMksZjOHucxjPgtYyCIW
s4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5z
hKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOE
pzzjOS94ySte84Z/+Y+3vOM9H/jIJz7zha984zs/+MkvfvOHgKc/MEEISjCC
E4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKT
gpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOC
kpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KW
tKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN334H3+ZooE=
    "], CompressedData["
1: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
uZNHKphU+Av+D0xY
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8735632861952887`*^9},
 CellLabel->
  "Out[2193]=",ExpressionUUID->"9b5b4354-6fe2-43e3-9535-670b1add213f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"poweroutputdirect", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "outputdirectflux", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"poweroutputdirect", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "400", ",", "1200"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "efficiency", " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toexport", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"poweroutputdirect", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "400", ",", "1200", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"poweroutputdirect", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "400", ",", "1200"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<./plots_for_sanity_colorado/intspectradirect.csv\>\"", ",", 
   "toexport"}], "]"}]}], "Input",
 CellChangeTimes->{{3.87355879036473*^9, 3.8735588005194073`*^9}, {
   3.8735596337582693`*^9, 3.8735596376892757`*^9}, {3.873562186574004*^9, 
   3.8735621881140623`*^9}, {3.873562226102057*^9, 3.873562226257894*^9}, 
   3.8735623603737907`*^9, {3.873563128744972*^9, 3.873563211047392*^9}, {
   3.87356329411938*^9, 3.873563296056519*^9}, {3.873569477768606*^9, 
   3.873569477924047*^9}},
 CellLabel->
  "In[2419]:=",ExpressionUUID->"a394657c-77a7-4525-b19e-597421cc029f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$17463589#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{400.0000163265315, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.873563206023405*^9, 3.87356321135003*^9}, 
   3.87356400985317*^9, 3.873569478511724*^9},
 CellLabel->
  "Out[2420]=",ExpressionUUID->"dac24768-e61c-4296-a6f9-8853419ecf04"],

Cell[BoxData["271.052981207068`"], "Output",
 CellChangeTimes->{{3.873563206023405*^9, 3.87356321135003*^9}, 
   3.87356400985317*^9, 3.873569478516869*^9},
 CellLabel->
  "Out[2422]=",ExpressionUUID->"3c353bcf-3dc3-4de1-875d-8866e496f783"],

Cell[BoxData["\<\"./plots_for_sanity_colorado/intspectradirect.csv\"\>"], \
"Output",
 CellChangeTimes->{{3.873563206023405*^9, 3.87356321135003*^9}, 
   3.87356400985317*^9, 3.8735694785358477`*^9},
 CellLabel->
  "Out[2423]=",ExpressionUUID->"72888ad8-f7e0-4534-9165-4e3597d79f5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"total", " ", "power", " ", "per", " ", "unit", " ", "area"}], " ",
    "*)"}], " ", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"sidespectradirectint", " ", "=", " ", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"outputdirectflux", ",", 
       RowBox[{"InterpolationOrder", "->", "0"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"outputpowerLSCdirect", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"sidespectradirectint", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"sidespectradirect", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"sidespectradirect", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "current", " ", "density", " ", "of", " ", "the", " ", "silicon", " ", 
     "solar", " ", "cell", " ", "is", " ", "determined", " ", "by", " ", 
     "multiplying", " ", "EQE", " ", "is", " ", "in", " ", "units", " ", "of",
      " ", "eV", " ", "times", " ", "this", " ", "by", " ", "the", " ", 
     "fluxs", " ", "in", " ", 
     RowBox[{"A", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m", "^", "2"}], " ", "/", "eV"}], ")"}]}]}], " ", "*)"}], 
   " ", "\n", 
   RowBox[{
    RowBox[{"sidespectradirectinteV", " ", "=", " ", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"makeFlux", "[", "outputdirectflux", "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"JGdirect", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"intEQE13", "[", "En", "]"}], "*", 
       RowBox[{"sidespectradirectinteV", "[", "En", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"En", ",", 
        RowBox[{"fac", "/", 
         RowBox[{"sidespectradirect", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"fac", "/", 
         RowBox[{"sidespectradirect", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"MaxRecursion", "->", "10000"}], ",", 
      RowBox[{"WorkingPrecision", "->", "4"}]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"A", "/", 
     RowBox[{"m", "^", "2"}]}], "*)"}], "\[IndentingNewLine]", 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.873547393683474*^9, 3.873547393868762*^9}, {
   3.873547515920249*^9, 3.87354751973391*^9}, 3.8735560553001747`*^9, 
   3.873556224781684*^9, {3.87355656939892*^9, 3.873556598830194*^9}, {
   3.873557796497244*^9, 3.8735577994311857`*^9}, {3.873562403804941*^9, 
   3.873562410198331*^9}, {3.873563270607148*^9, 3.873563274214609*^9}, {
   3.873563333610161*^9, 3.873563387528413*^9}},
 CellLabel->
  "In[2223]:=",ExpressionUUID->"346858c0-35cc-4213-a4d9-281d7057df02"],

Cell[BoxData["271.053010335624`"], "Output",
 CellChangeTimes->{{3.873563336856637*^9, 3.873563389141019*^9}},
 CellLabel->
  "Out[2224]=",ExpressionUUID->"4a946fc7-002f-4193-bcc7-148a210e5770"],

Cell[BoxData["206.6733202415972646046`4."], "Output",
 CellChangeTimes->{{3.873563336856637*^9, 3.873563389535499*^9}},
 CellLabel->
  "Out[2226]=",ExpressionUUID->"4644914f-d568-4a3e-bc46-5021e6863f95"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", " ", "Diffuse"}], " ", "**)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "similarly", " ", "to", " ", "direct", " ", "output", " ", "generation"}],
     ",", " ", 
    RowBox[{
    "but", " ", "this", " ", "time", " ", "we", " ", "look", " ", "at", " ", 
     "the", " ", "spectra", " ", "from", " ", "each", " ", "angle"}], ",", 
    " ", 
    RowBox[{"(", 
     RowBox[{"because", " ", "it", " ", "is", " ", "diffuse"}], ")"}], ",", 
    " ", 
    RowBox[{
    "so", " ", "therefore", " ", "we", " ", "must", " ", "also", " ", 
     "divide", " ", "by", " ", "number", " ", "of", " ", "angles"}]}], " ", 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"LSCoutputlistdiffuse", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"padZero", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"numberofangles", "*", "totalphotonsin"}], ")"}]}], 
             "*", 
             RowBox[{"intfluxnmdiffuse", "[", "wlength", "]"}], "*", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], " ", "&"}], " ", "/@",
          " ", 
         RowBox[{"packedthedata", "[", 
          RowBox[{"[", 
           RowBox[{"side", ",", " ", "angle", ",", " ", 
            RowBox[{
            "wlength", " ", "-", " ", "startwavelength", " ", "+", " ", 
             "1"}]}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"angle", ",", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", " ", 
             RowBox[{"altitude", " ", "-", " ", "1"}], ",", " ", "1"}], "]"}],
            ",", " ", 
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"altitude", " ", "+", " ", "1"}], ",", " ", "90", ",", 
             "1"}], "]"}]}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "wlength", ",", " ", "startwavelength", ",", " ", "1200", ",", " ", 
         "1"}], "}"}]}], "]"}]}], ";"}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"anglerange", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"incidentangle", "-", "1"}], ",", "1"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"incidentangle", "+", "1"}], ",", "90", ",", "1"}], "]"}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"WithCleanup", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SetSystemOptions", "[", 
       RowBox[{"\"\<CompileOptions\>\"", "->", 
        RowBox[{"\"\<TableCompileLength\>\"", "->", "Infinity"}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LSCoutputlistdiffuse1", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"wlength", ",", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"90", "*", "totalphotonsin"}], ")"}]}], "*", 
             RowBox[{"intfluxnmdiffuse", "[", "wlength", "]"}], "*", 
             RowBox[{"Normal", "[", 
              RowBox[{"raytracingdata", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "angle", ",", 
                 RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
               "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"wlength", ",", " ", 
            RowBox[{"wavelengthtable", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"angle", ",", "anglerange"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LSCoutputlistdiffuse2", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"wlength", ",", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"90", "*", "totalphotonsin"}], ")"}]}], "*", 
             RowBox[{"intfluxnmdiffuse", "[", "wlength", "]"}], "*", 
             RowBox[{"Normal", "[", 
              RowBox[{"raytracingdata", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "angle", ",", 
                 RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
               "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"wlength", ",", " ", 
            RowBox[{"wavelengthtable", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"angle", ",", "anglerange"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LSCoutputlistdiffuse3", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"wlength", ",", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"90", "*", "totalphotonsin"}], ")"}]}], "*", 
             RowBox[{"intfluxnmdiffuse", "[", "wlength", "]"}], "*", 
             RowBox[{"Normal", "[", 
              RowBox[{"raytracingdata", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "angle", ",", 
                 RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
               "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"wlength", ",", " ", 
            RowBox[{"wavelengthtable", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"angle", ",", "anglerange"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LSCoutputlistdiffuse4", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"wlength", ",", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"90", "*", "totalphotonsin"}], ")"}]}], "*", 
             RowBox[{"intfluxnmdiffuse", "[", "wlength", "]"}], "*", 
             RowBox[{"Normal", "[", 
              RowBox[{"raytracingdata", "[", 
               RowBox[{"[", 
                RowBox[{"4", ",", "angle", ",", 
                 RowBox[{"wlength", "-", "emissionmin", "+", "1"}]}], "]"}], 
               "]"}], "]"}]}]}], "}"}], " ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"wlength", ",", " ", 
            RowBox[{"wavelengthtable", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"angle", ",", "anglerange"}], "}"}]}], "]"}]}], ";"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"SetSystemOptions", "[", 
       RowBox[{"\"\<CompileOptions\>\"", "->", 
        RowBox[{"\"\<TableCompileLength\>\"", "->", "250"}]}], "]"}]}], "]"}],
     ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"nm", ",", 
     RowBox[{"A", "/", 
      RowBox[{"(", 
       RowBox[{"nm", " ", 
        RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "this", " ", "time", " ", "total", " ", "over", " ", "both", " ", 
     "angles", " ", "and", " ", "wavelengths"}], " ", "*)"}], " ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Now", ",", " ", 
     RowBox[{"LSCoutputlistdiffuse", " ", "in", " ", "terms", " ", "in", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"input", " ", "wavelenglth"}], ",", "angle", ",", 
        RowBox[{"{", 
         RowBox[{"output", " ", "spectra"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{
     "what", " ", "we", " ", "need", " ", "is", " ", "the", " ", "total", " ",
       "output", " ", "spectra", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"nm", " ", "out"}], ",", " ", "total"}], "}"}]}]}], "  ", 
    "*)"}], " ", "\n", 
   RowBox[{
    RowBox[{"outputmatrix", " ", "=", 
     RowBox[{"LSCoutputlistdiffuse1", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sidespectrafluxdiffuse1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"outputmatrix", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", ";;", ",", 
              RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
            "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"wavelengthtable", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"nm", ",", 
     RowBox[{"A", "/", 
      RowBox[{"(", 
       RowBox[{"nm", " ", 
        RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"outputmatrix", " ", "=", 
     RowBox[{"LSCoutputlistdiffuse2", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sidespectrafluxdiffuse2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"outputmatrix", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", ";;", ",", 
              RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
            "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"wavelengthtable", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"nm", ",", 
     RowBox[{"A", "/", 
      RowBox[{"(", 
       RowBox[{"nm", " ", 
        RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outputmatrix", " ", "=", 
     RowBox[{"LSCoutputlistdiffuse3", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sidespectrafluxdiffuse3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"outputmatrix", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", ";;", ",", 
              RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
            "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"wavelengthtable", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"nm", ",", 
     RowBox[{"A", "/", 
      RowBox[{"(", 
       RowBox[{"nm", " ", 
        RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outputmatrix", " ", "=", 
     RowBox[{"LSCoutputlistdiffuse4", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sidespectrafluxdiffuse4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"outputmatrix", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", ";;", ",", 
              RowBox[{"\[Lambda]", "-", "emissionmin", "+", "1"}]}], "]"}], 
            "]"}], ",", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", 
         RowBox[{"wavelengthtable", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"nm", ",", 
     RowBox[{"A", "/", 
      RowBox[{"(", 
       RowBox[{"nm", " ", 
        RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8735634417874413`*^9, 3.873563442594946*^9}, {
  3.873563583383012*^9, 3.873563649391782*^9}},
 CellLabel->
  "In[2244]:=",ExpressionUUID->"7a071698-6f35-4df4-9a4e-e52ff8d9634b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sidespectradiffuse1", "=", 
    RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdiffuse1", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"nm", ",", 
    RowBox[{"W", "/", 
     RowBox[{"(", 
      RowBox[{"nm", " ", 
       RowBox[{"m", "^", "2"}]}], ")"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sidespectradiffuse2", "=", 
   RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdiffuse2", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"sidespectradiffuse3", "=", 
   RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdiffuse3", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sidespectradiffuse4", "=", 
    RowBox[{"unmakeFluxnm", "[", "sidespectrafluxdiffuse4", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sidespectradiffuse", "=", "sidespectradiffuse1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sidespectradiffuse", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}], "=", 
    RowBox[{
     RowBox[{"sidespectradiffuse1", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}], "+", 
     RowBox[{"sidespectradiffuse3", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}], "+", 
     RowBox[{"sidespectradiffuse2", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}], "+", 
     RowBox[{"sidespectradiffuse4", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sidespectradiffuseint", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"sidespectradiffuse", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
  ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.873563726914064*^9, 3.873563792363212*^9}},
 CellLabel->
  "In[2259]:=",ExpressionUUID->"2a218199-35ca-4d17-89bb-032e1b5a5b14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"sidespectradiffuseint", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "400", ",", "1200"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toexport", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"sidespectradiffuseint", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "400", ",", "1200", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"sidespectradiffuseint", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "400", ",", "1200"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<./plots_for_sanity_colorado/intspectradiffuse.csv\>\"", ",", 
   "toexport"}], "]"}]}], "Input",
 CellChangeTimes->{{3.873564051394801*^9, 3.873564066995694*^9}, 
   3.873569456312797*^9},
 CellLabel->
  "In[2415]:=",ExpressionUUID->"6b516b9a-092a-42f8-b090-ca1adafaa494"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
eNxeCy79dPfD91fgqwaVf/69Bv8/7dbVRA==
       "]]},
     Annotation[#, "Charting`Private`Tag$17463179#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{400.0000163265315, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.873564069315184*^9, 3.87356635842943*^9, 
  3.873569456761621*^9},
 CellLabel->
  "Out[2415]=",ExpressionUUID->"4273b221-df8b-4949-bac2-e2f2125d17ad"],

Cell[BoxData["214.70133107991887`"], "Output",
 CellChangeTimes->{3.873564069315184*^9, 3.87356635842943*^9, 
  3.8735694567681503`*^9},
 CellLabel->
  "Out[2417]=",ExpressionUUID->"99ba9f3f-47fe-4011-ac70-374d8c6dae3e"],

Cell[BoxData["\<\"./plots_for_sanity_colorado/intspectradiffuse.csv\"\>"], \
"Output",
 CellChangeTimes->{3.873564069315184*^9, 3.87356635842943*^9, 
  3.87356945677507*^9},
 CellLabel->
  "Out[2418]=",ExpressionUUID->"8e312e04-e25c-4139-9d19-68a4aae09ce1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sidespectradiffuseint", "[", "x", "]"}], "+", 
    RowBox[{"poweroutputdirect", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "400", ",", "1200"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"toexport", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"sidespectradiffuseint", "[", "x", "]"}], "+", 
        RowBox[{"poweroutputdirect", "[", "x", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "400", ",", "1200", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sidespectradiffuseint", "[", "x", "]"}], "+", 
    RowBox[{"poweroutputdirect", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "400", ",", "1200"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<./plots_for_sanity_colorado/totaloutput.csv\>\"", ",", "toexport"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8735663011288147`*^9, 3.8735663534525757`*^9}, {
  3.87356915646867*^9, 3.873569156621314*^9}},
 CellLabel->
  "In[2383]:=",ExpressionUUID->"d2dbfd3d-f2eb-41dd-8139-cb812935c687"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$17457062#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{400.0000163265315, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.873566327987656*^9, 3.873566355207797*^9}, 
   3.873569157332005*^9},
 CellLabel->
  "Out[2383]=",ExpressionUUID->"b5b91534-bbd4-4796-84a9-3a45098b4b3c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"485.7543122869873`", "/", "1020"}]], "Input",
 CellChangeTimes->{{3.8735691995127287`*^9, 3.873569200240841*^9}},
 CellLabel->
  "In[2388]:=",ExpressionUUID->"b0ee6ac1-6751-4c8d-9c7f-72f17d100d5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"sidespectradiffuseint", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "400", ",", "1200"}], "}"}]}], "]"}], "/", 
  "totalfluxdiffuse"}]], "Input",
 CellChangeTimes->{{3.873569660295001*^9, 3.873569677691567*^9}, {
   3.873569713556126*^9, 3.873569715395097*^9}, {3.873569765449093*^9, 
   3.8735697660633183`*^9}, 3.873569799340921*^9},
 CellLabel->
  "In[2448]:=",ExpressionUUID->"e29372f9-85e1-4efb-9729-c6b08f4acd56"],

Cell[BoxData["0.79347697691152`"], "Output",
 CellChangeTimes->{3.8735697385135603`*^9, 3.8735698037215853`*^9},
 CellLabel->
  "Out[2448]=",ExpressionUUID->"51c189a9-b2f5-4a1d-b0cb-8b63866773a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"poweroutputdirect", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "400", ",", "1200"}], "}"}]}], "]"}], "/", 
  "totalfluxdirect"}]], "Input",
 CellChangeTimes->{
  3.873569721298333*^9, 3.87356976837878*^9, {3.873569800253133*^9, 
   3.8735698020006037`*^9}},
 CellLabel->
  "In[2447]:=",ExpressionUUID->"e97d906f-324d-4563-9b16-7a2904779e52"],

Cell[BoxData["0.6252239031729033`"], "Output",
 CellChangeTimes->{
  3.8735692007955627`*^9, {3.873569652504466*^9, 3.873569678130958*^9}, {
   3.873569715830954*^9, 3.8735697218135033`*^9}, 3.8735698022499113`*^9},
 CellLabel->
  "Out[2447]=",ExpressionUUID->"bf6acce8-0b02-47a2-bdcb-12e004318e3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"sidespectradiffuseint", "[", "x", "]"}], "+", 
    RowBox[{"poweroutputdirect", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "400", ",", "1200"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellLabel->
  "In[2387]:=",ExpressionUUID->"41b8f3b9-65b3-46e2-9576-23a261db57af"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$17458609#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{400.0000163265315, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.873566327987656*^9, 3.873566355207797*^9}, {
  3.8735691576064043`*^9, 3.873569182540606*^9}},
 CellLabel->
  "Out[2387]=",ExpressionUUID->"c58d8c46-4e03-4a9a-ae42-a58322442c80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputpowerLSCdiffuse", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"sidespectradiffuseint", "[", "y", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"sidespectradiffuse", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"sidespectradiffuse", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"outputpowerLSC", "=", " ", 
    RowBox[{
    "outputpowerLSCdiffuse", " ", "+", " ", "outputpowerLSCdirect"}]}], ";"}],
   " ", 
  RowBox[{"(*", 
   RowBox[{"concentrated", " ", "power"}], " ", 
   RowBox[{"(*", 
    RowBox[{"W", "/", 
     RowBox[{"(", 
      RowBox[{"m", "^", "2"}], ")"}]}], "*)"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sidespectradiffuseinteV", " ", "=", " ", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"makeFlux", "[", "sidespectradiffuse", "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"JGdiffuse", " ", "=", " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"intEQE13", "[", "En", "]"}], "*", 
      RowBox[{"sidespectradiffuseinteV", "[", "En", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"En", ",", 
       RowBox[{"fac", "/", 
        RowBox[{"sidespectradiffuse", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"fac", "/", 
        RowBox[{"sidespectradiffuse", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"MaxRecursion", "->", "10000"}], ",", 
     RowBox[{"WorkingPrecision", "->", "4"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[2301]:=",ExpressionUUID->"2e7254af-a43d-433d-a86a-90d433214111"],

Cell[BoxData["214.70133107991887`"], "Output",
 CellChangeTimes->{3.873563964838673*^9, 3.873564082125313*^9},
 CellLabel->
  "Out[2301]=",ExpressionUUID->"e134846d-f7eb-4f0b-924e-88bc6b531d21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"**", 
    RowBox[{"*", " ", "Silicon", " ", "cell"}]}], " ", "****)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "total", " ", "current", " ", "density", " ", "impinging", " ", "on", " ", 
    "the", " ", "silicon", " ", "is", " ", "given", " ", "by", " ", "the", 
    " ", "sum", " ", "of", " ", "the", " ", "diffuse", " ", "and", " ", 
    "direct", " ", "light"}], " ", "*)"}], " ", "\n", 
  RowBox[{"jg", "=", 
   RowBox[{"JGdiffuse", "+", "JGdirect"}]}]}]], "Input",
 CellChangeTimes->{3.873563986434967*^9},
 CellLabel->
  "In[2305]:=",ExpressionUUID->"eff02b09-ce96-4793-af22-131da91d9248"],

Cell[BoxData["370.2875646964428243583`4."], "Output",
 CellChangeTimes->{3.873563986863216*^9, 3.873564084919808*^9},
 CellLabel->
  "Out[2305]=",ExpressionUUID->"091819c5-889f-45fa-ad76-02a666fbc353"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Make", " ", "JV", " ", "characteristic"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"dSi", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v1", ",", 
         RowBox[{
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{"Il", "==", 
             RowBox[{"jg", "-", 
              RowBox[{"JRSi", "[", 
               RowBox[{"v1", ",", "Il", ",", 
                RowBox[{"Rs", "[", 
                 RowBox[{"[", "cell", "]"}], "]"}]}], "]"}], "-", 
              RowBox[{"JRAuger", "[", 
               RowBox[{"v1", ",", "Il", ",", 
                RowBox[{"Rs", "[", 
                 RowBox[{"[", "cell", "]"}], "]"}], ",", 
                RowBox[{"thicknesses", "[", 
                 RowBox[{"[", "cell", "]"}], "]"}]}], "]"}], "-", 
              RowBox[{"JRnon", "[", 
               RowBox[{"v1", ",", "Il", ",", 
                RowBox[{"Rs", "[", 
                 RowBox[{"[", "cell", "]"}], "]"}], ",", 
                RowBox[{"INR", "[", 
                 RowBox[{"[", "cell", "]"}], "]"}]}], "]"}], "-", 
              RowBox[{"Resistance", "[", 
               RowBox[{"v1", ",", "Il", ",", 
                RowBox[{"Rs", "[", 
                 RowBox[{"[", "cell", "]"}], "]"}], ",", 
                RowBox[{"Rsh", "[", 
                 RowBox[{"[", "cell", "]"}], "]"}]}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"Il", ",", "0"}], "}"}], ",", 
            RowBox[{"PrecisionGoal", "->", "5"}], ",", 
            RowBox[{"MaxIterations", "->", "10000"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"v1", ",", "0", ",", 
         RowBox[{
          RowBox[{"SiBandgap", "[", "T", "]"}], "-", "0.3"}], ",", ".005"}], 
        "}"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ivSi", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"dSi", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Calculate", " ", "Voc"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"vocSi", "=", 
     RowBox[{
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{"ivSi", "[", "v", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", 
          RowBox[{
           RowBox[{"SiBandgap", "[", "T", "]"}], "-", "0.4"}]}], "}"}]}], 
       "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Calculate", " ", "Jsc"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"jscSi", "=", 
     RowBox[{
      RowBox[{"ivSi", "[", "0", "]"}], "/", "10"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"mA", "/", 
     RowBox[{"cm", "^", "2"}]}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Finding", " ", "the", " ", "maximum", " ", "power", " ", "conversion", 
     " ", "efficiency", " ", "of", " ", "the", " ", "Si", " ", "cell", " ", 
     "we", " ", "add", " ", "additional", " ", "constraints", " ", "that", 
     " ", "the", " ", "voltage", " ", "must", " ", "be", " ", "positive", " ",
      "and", " ", "to", " ", "help", " ", "NMaximize"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"eff", "=", 
     RowBox[{"NMaximize", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"100", 
          RowBox[{"ivSi", "[", "V", "]"}], " ", 
          RowBox[{"V", "/", "outputpowerLSC"}]}], ",", 
         RowBox[{"0", "<", "V", "<", 
          RowBox[{
           RowBox[{"SiBandgap", "[", "T", "]"}], "-", "0.3"}]}]}], "}"}], ",",
        "V"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8735641408259363`*^9, 3.8735641408912477`*^9}},
 CellLabel->
  "In[2314]:=",ExpressionUUID->"190ff15d-4e73-40e9-be01-dc0ce127f3e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"areasurface", "=", 
    RowBox[{"0.1", "*", "0.1"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ivSi", "[", "x", "]"}], "*", "areasurface"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.9"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"areasurface", "*", 
     RowBox[{"ivSi", "[", "x", "]"}], " ", "*", "x"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "0.8"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ivcurve", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"ivSi", "[", "x", "]"}], "*", "areasurface"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.9", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"powercurve", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"areasurface", "*", 
         RowBox[{"ivSi", "[", "x", "]"}], " ", "*", "x"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "0.9", ",", "0.01"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<./plots_for_sanity_colorado/powercurve.csv\>\"", ",", "powercurve"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<./plots_for_sanity_colorado/ivcurve.csv\>\"", ",", "ivcurve"}], 
    "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.873564113968136*^9, 3.873564156242256*^9}, {
  3.8735641936363153`*^9, 3.8735642629955473`*^9}, {3.873567175769478*^9, 
  3.873567179446123*^9}},
 CellLabel->
  "In[2376]:=",ExpressionUUID->"f51d455e-77dc-43dd-8718-dbc7bac7b47b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
LDgzbxpXK0VFmWeduTg8LOix0/BbuYKKnuSLz5/gZ4Fhh6i9N42KynZfYBgI
s0Atu1drAx8V9dqsrlghwYKpI1aDSTMUJJwe5FisygLFbdTAplYK+lBT92Zx
PQv8Et+4BDdS0NOxf0rG6rj+90DLXbUUZCIfTHzcwoLg4imNopcUFJYVfJp/
JwvGN3cx0h5QEE/edWsrUxZULTmZqHhSUG/b64pMMxa43H8ZVudKQY++cMtM
/ccCqe1cTVaOFIQ23Ri4bskCD7cU/SgrCrpWeMP82SkWqI682/lNj4LMehqK
f5xhwfvLMn4RuhS0epZnBXJgwXVxx3JFTQqq1grp7nNmwciBJS3LdRQUbdG4
ee15FoSzD3hOr6Ggkz68secusEDnxt3CWzIUtCF57/TLiyzgrGZOy6+goN9l
IYeW3Fkw8FFhKYRCQW2DjfkmXizwueLKX8tLQSkLvNQEH9yvZCl14Y8w0t0Z
2qbqz4JjZiayFyaFkW9NqPGREBb011/UtegQRrONN/Wzk3C/j6s8lWOF0afu
W9sOvML9EircIn+E0JscDamIahZUJ6zj7pwRQg8D++dbalnw3VCZO2ZCCFmp
KVUYNbJARmnqr1u/ENJeensvtIkFLX0vYre1CSHRPne/xhYW+Id5KvytFULN
QbU79dvx+T/9NIx+IoSyNX6A7hgLrC7T3reaCaFgvjT5y3QWLFvffTZurxCy
+WDAXUawoPRD/PxxXSEkHhbXoMXB59OTWcVREEI3Rjcabf7Ggn8v10tLfBNE
Z6LtD6jwsKHITjXHOEQQ7bYX2ujIxwZH6WUyBT6CSEa3kJItwIZVHewICRdB
PB//titQ2BChm+PGMBVEeZXZz8/Q2GA4fXPcGARRWOzBmAxRNixkOR4p2CqI
7B1nL46JsaHA2qhRQlkQ6e1KObxagg0Oouu2BUgJolViaIuNFBt6+bpXBggI
onk2e3mqDBv2cxJu8s4vQ8/jtXtlVrNhT76srUT/MiT3uctCQoUNa7dvpG5P
WIaGjPec5jnAhmcJObc8rwggk6hv3zxM2VCXa80ZshdA5Z1ZNxhmbPhYRTWG
QwIo2VI4p96cDcJMTwGqogAydxicvGbLBg9tuPn4HT/qvObh/8edDQZpD/7Y
U/iRXoMy1dWLDbqEZ4XZDB96zj+U/sEHW83YZ+cgH4qO1ntd6c8GjZKv02JZ
fGj/fYrglVA2KLcjon4nH3pT+jhp7i4boj6U2usf50Xav6xUz95nQ7asbmSf
Di/K2k2tfJ/GhlabV0XOMrzoRqPnSPEjNgiM13LFDPMg6AElj2dsuE22PPhw
kge9mhwunKplw4qopBLdw9yoSEmknc1iQ3p+4zn5t39hAixb1CfY0GTrZJ3q
/RfkbdIaPD+z4a2I0H4p+b8Ql7ihcmmaDT3uZmrUy4vgzm+cI7XAhnHtYfZP
5T/wRCHmkc1vNpCsgAHP7t9A39OflrnIBlbymuapgN/wn69DggY3B6YWHB6T
vb8gPD4vxpuXAzNPBZJOXfsF9QUzEa/4OfDjxNPQ4fW/YKFN9yaXIAd+Uky9
LfoXYAsnKHifMAcWX28bux28AC68LQHRVA6k05va7skuwMO1Ipd7RTiw559l
eVbZT1huleZ2SpwDQbt94yon5+Fba8UJXzkOcJeXGbCsfsCLvBntHA0ObM3X
yd29dRbYzbpbJrdwYKmtJcG4fQbWkEEbNbU48ODT8eCjzjMQIyuiWKvDAbt0
l61ql7/BxegNogOIA4XG53xCN02BxkWHT/zmHIiyS7k/+YwFz7f2pzte5sBV
fuc+T9sGuFKldmDEjwNuYYxK/5VVYGgUOH80EJ/v71yb6JUiGLFSOoyucwA2
62vY5QfWCQd7cMlG4Xrk87Ntu5rrnDppDt0POOBZcsB8hkWv07SyEzV+xIFN
aTEbev4j6v4ySqpqsjhgEdLLXVRF1iX+OCnx7AkHdI+eKHS/w65rlMtrulnM
gXmbhzxH8yfr5F33qe1q5kBXhl9nxcJc3eRcSl9RKwdkO9e0Cnf8qCu/NhWs
9o4DoouNr20ezdeZxScOS3ZzwMxKpJTrwELd1Uoi8tswB5qsItO6Gv/UfVgW
NPV4igOfWiwHP1dz1ydklxcvl5yA8Beudb0SwvXnSQ96gPQEzNacqo14KFxv
oKguwlk5AUntR2qQOqV+NuPhuZo1E3he6VQV7KXWH02NkD+vNgGuynzlkZ4i
9cvjT8Y07pqA5NSSNW5lYvUxQf/O+dpPwGYB+aW2Jal6p9rKu4yzE3A3T1/3
irV0vd5fryZT5wn4Z+bgua5Eun7af0Je6cIEdN7NYQedk6k/5Nsz2OUzASbr
N3Vp962sp7plGa2PmIAsu7HD/03K1UecMFYYeTEBuTlb3X43KNSnjSOFn9gP
+m/3ezcp1P8PYj7EwQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$17456576#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.9}, {-8.885656999171996, 3.7028460240124037`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.873564118542835*^9, 3.8735641569454613`*^9}, {
   3.873564199110366*^9, 3.873564270509678*^9}, 3.8735671799346657`*^9},
 CellLabel->
  "Out[2377]=",ExpressionUUID->"e029ca24-5dbd-4178-a2c4-dfec8f4ec70d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
hvWXtCXevcuGerfNDf286tj/8UOncw==
       "]]},
     Annotation[#, "Charting`Private`Tag$17456629#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.873564118542835*^9, 3.8735641569454613`*^9}, {
   3.873564199110366*^9, 3.873564270509678*^9}, 3.873567179954261*^9},
 CellLabel->
  "Out[2378]=",ExpressionUUID->"b5237745-e215-4bd0-a4e5-819702b93384"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.8300000000000001`\\\", \\\
\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 2379, 314, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873567179959753*^9},
 CellLabel->
  "During evaluation of \
In[2376]:=",ExpressionUUID->"c585b431-c2a1-4958-8c76-bb9bf56256dd"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.84`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 2379, 315, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873567179967746*^9},
 CellLabel->
  "During evaluation of \
In[2376]:=",ExpressionUUID->"e356fc8d-77cf-43d0-a4fd-e60844c22670"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.85`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 2379, 316, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873567179972527*^9},
 CellLabel->
  "During evaluation of \
In[2376]:=",ExpressionUUID->"2def22eb-f66d-4339-9957-d37a90567539"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 2379, 317, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873567179976812*^9},
 CellLabel->
  "During evaluation of \
In[2376]:=",ExpressionUUID->"b2a3f773-bd58-4dbb-9f50-644f4af49fbd"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.8300000000000001`\\\", \\\
\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 2380, 318, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873567179981246*^9},
 CellLabel->
  "During evaluation of \
In[2376]:=",ExpressionUUID->"0ccc12ff-3709-4433-b25e-57dd19178421"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.84`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 2380, 319, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873567179985319*^9},
 CellLabel->
  "During evaluation of \
In[2376]:=",ExpressionUUID->"2a436d66-a746-45cf-b54c-87820e6fcdc5"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.85`\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 2380, 320, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873567179989357*^9},
 CellLabel->
  "During evaluation of \
In[2376]:=",ExpressionUUID->"9fa1d1e7-3341-4dad-b09d-90e35909f683"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 2380, 321, 30450810782118945478, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.873567179993457*^9},
 CellLabel->
  "During evaluation of \
In[2376]:=",ExpressionUUID->"6b61628c-dcb0-4d8a-b9f2-b4e3ec3986c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inputpower", " ", "=", " ", 
  RowBox[{"(", 
   RowBox[{"totalincidentpowerdirect", "+", "totalincidentpowerdiffuse"}], 
   ")"}]}]], "Input",
 CellLabel->
  "In[2407]:=",ExpressionUUID->"ddf32a07-29e5-4692-aa92-8cdd366dc076"],

Cell[BoxData["1019.9471103350943`"], "Output",
 CellChangeTimes->{3.8735693023519707`*^9},
 CellLabel->
  "Out[2407]=",ExpressionUUID->"f8cb7d0a-5b9c-4787-985c-ac26fafe8c3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outputpowerlsc", " ", "=", " ", "outputpowerLSC"}]], "Input",
 CellLabel->
  "In[2408]:=",ExpressionUUID->"68d8dfe5-7e4a-4d12-b47b-6e7175d6c7e1"],

Cell[BoxData["485.75434141554285`"], "Output",
 CellChangeTimes->{3.873569309503207*^9},
 CellLabel->
  "Out[2408]=",ExpressionUUID->"5a7464f5-b9ea-48bf-894a-40a389be0675"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxcurrent", "*", 
  RowBox[{"maxvoltage", "/"}]}]], "Input",
 CellChangeTimes->{{3.8735693192225323`*^9, 
  3.873569372466202*^9}},ExpressionUUID->"e060d4ac-e607-4ba0-adf2-\
79e9eff260ce"],

Cell[BoxData["2.30890019077108`"], "Output",
 CellChangeTimes->{{3.873569315766004*^9, 3.873569331428355*^9}},
 CellLabel->
  "Out[2412]=",ExpressionUUID->"f19483c6-4b79-4508-8b0b-273042817a55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["siPCE"], "Input",
 CellChangeTimes->{{3.873569411044072*^9, 3.873569412454938*^9}},
 CellLabel->
  "In[2414]:=",ExpressionUUID->"3a90f3bf-7ad9-4ccf-b8a0-bac91432f6c1"],

Cell[BoxData["0.4753226052581815`"], "Output",
 CellChangeTimes->{3.87356941282017*^9},
 CellLabel->
  "Out[2414]=",ExpressionUUID->"0d2035e4-75b3-4e3d-92bc-1f456285a695"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"efficiency", "=", 
     RowBox[{"eff", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"efficiency", " ", "of", " ", "Si"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"maxvoltage", "=", 
     RowBox[{"V", "/.", 
      RowBox[{"eff", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"maxcurrent", "=", 
     RowBox[{"ivSi", "[", "maxvoltage", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"A", "/", 
     RowBox[{"m", "^", "2"}]}], "*)"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"LSCefficiency", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"outputpowerLSC", "/", 
         RowBox[{"(", 
          RowBox[{
          "totalconcentratedincidentpowerdiffuse", "+", 
           "totalconcentratedincidentpowerdirect"}], " ", ")"}]}], ")"}], "  ",
        "100"}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"efficiency", " ", "of", " ", "LSC"}], ",", " ", 
       RowBox[{"relative", " ", "to", " ", "surface", " ", "area"}]}], " ", 
      "*)"}], ";"}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "power", " ", "into", " ", "the", " ", "LSC", " ", "vs", " ", "power", 
      " ", "out", " ", "of", " ", "the", " ", "side", " ", "of", " ", "LSC", 
      " ", "BEFORE", " ", "impinging", " ", "onto", " ", "silicon", " ", 
      "cell", " ", "\n", "outputpower", " ", "LSC", " ", "is", " ", "in", " ", 
      RowBox[{"W", "/", 
       RowBox[{"(", 
        RowBox[{"m", "^", "2"}], ")"}]}], " ", "as", " ", "is", " ", 
      "totalincidentpowerdirect"}], "+", "totalincidentpowerdiffuse"}], 
    "*)"}], " ", "\n", 
   RowBox[{
    RowBox[{"outputpowerlsc", " ", "=", " ", "outputpowerLSC"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"inputpower", " ", "=", " ", 
     RowBox[{"(", 
      RowBox[{"totalincidentpowerdirect", "+", "totalincidentpowerdiffuse"}], 
      ")"}]}], ";"}], "\n", 
   RowBox[{"lscPCE", " ", "=", " ", 
    RowBox[{"outputpowerlsc", "/", "inputpower"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "si", " ", "PCE", " ", "is", " ", "the", " ", "PCE", " ", "from", " ", 
     "the", " ", "LSC", " ", "output"}], " ", "*)"}], " ", "\n", 
   RowBox[{"siPCE", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"maxcurrent", "*", "maxvoltage"}], ")"}], "/", 
     "outputpowerlsc"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"efficiency", " ", "of", " ", "LSC"}], " ", "&"}], " ", "Si", 
      " ", "system"}], ",", " ", 
     RowBox[{"relative", " ", "to", " ", "surface", " ", "area"}]}], " ", 
    "*)"}], "\n", 
   RowBox[{"totalefficiency", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"maxcurrent", "*", "maxvoltage"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"(", 
       RowBox[{"totalincidentpowerdirect", "+", "totalincidentpowerdiffuse"}],
        ")"}], ")"}]}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "assume", " ", "that", " ", "the", " ", "max", " ", "current", " ", 
      "and", " ", "the", " ", "max", " ", "voltage", " ", "is", " ", 
      "consistent", " ", "over", " ", "the", " ", "timestep", " ", "size", 
      " ", "\n", "data", " ", "is", " ", "in", " ", "5", " ", "minute", " ", 
      "internvals"}], ",", " ", 
     RowBox[{"but", " ", "we", " ", "do", " ", "3", " ", "steps", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
        "set", " ", "out", " ", "in", " ", "efficiency", " ", "table", " ", 
         "which", " ", "calls", " ", "this", " ", "function"}], " ", "-", " ", 
        RowBox[{"this", " ", "is", " ", "therefore", " ", "15", " ", 
         RowBox[{"minutes", "."}]}]}], " ", "\n", "  "}]}]}], "*)"}], " ", 
   "\n", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "maxcurrent", "*", "maxvoltage", " ", "is", " ", "the", " ", "power"}], 
     ",", " ", 
     RowBox[{
     "but", " ", "we", " ", "need", " ", "to", " ", "give", " ", "this", " ", 
      "in", " ", 
      RowBox[{"hours", ".", "  ", "\n", "  ", "times"}], " ", "by", " ", "a", 
      " ", "thousand", " ", "to", " ", "get", " ", "kilowatt", " ", 
      "hours"}]}], "*)"}], " ", "\n", 
   RowBox[{
    RowBox[{"kwh", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"maxcurrent", "*", "maxvoltage"}], ")"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"15", "/", "60"}], ")"}], "/", "1000"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.873563401959549*^9, 3.873563420066516*^9}, {
   3.8735638040946913`*^9, 3.873563811458449*^9}, {3.8735639632387733`*^9, 
   3.8735639833984203`*^9}, 3.873564108530312*^9, {3.873564275633997*^9, 
   3.873564277165845*^9}, {3.873569250075165*^9, 3.873569280220148*^9}},
 CellLabel->
  "In[2398]:=",ExpressionUUID->"b3483f6f-5f1b-4316-b0e1-0c04223428dc"],

Cell[BoxData["0.4762544415229067`"], "Output",
 CellChangeTimes->{
  3.873563813261384*^9, {3.8735692605680437`*^9, 3.873569280604493*^9}},
 CellLabel->
  "Out[2403]=",ExpressionUUID->"b1abbc71-9933-4aa5-8224-8f2794ee50d8"],

Cell[BoxData["0.4753226052581815`"], "Output",
 CellChangeTimes->{
  3.873563813261384*^9, {3.8735692605680437`*^9, 3.873569280606893*^9}},
 CellLabel->
  "Out[2404]=",ExpressionUUID->"a9a1af5a-7dda-4ea4-92c7-351757192526"],

Cell[BoxData["0.22637450191044825`"], "Output",
 CellChangeTimes->{
  3.873563813261384*^9, {3.8735692605680437`*^9, 3.873569280609396*^9}},
 CellLabel->
  "Out[2405]=",ExpressionUUID->"0c3db018-e63f-40b4-9fe9-7aae7323c084"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["totalefficiency"], "Input",
 CellLabel->
  "In[2413]:=",ExpressionUUID->"cbebd3e4-d82d-46e5-afad-364621d47c42"],

Cell[BoxData["0.22637450191044825`"], "Output",
 CellChangeTimes->{3.873569393759898*^9},
 CellLabel->
  "Out[2413]=",ExpressionUUID->"202f8a68-7a22-4c7c-94cb-2eee104d2100"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"efficiencies", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sicell", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"10", "*", " ", 
          RowBox[{"10", "^", 
           RowBox[{"-", "2"}]}]}], ")"}], "^", "2"}], ",", 
       RowBox[{"10", "*", 
        RowBox[{"1", "/", "3"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"10", "^", 
           RowBox[{"-", "2"}]}], ")"}], "^", "2"}]}], ",", "side", ",", 
       "part"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"part", ",", "startpart", ",", "endpart", ",", "3"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"side", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"\"\<./results_colorado/results_\>\"", "<>", 
     RowBox[{"ToString", "[", "month", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "startpart", "]"}], "<>", "\"\<_\>\"", "<>", 
     RowBox[{"ToString", "[", "endpart", "]"}], "<>", "\"\<.csv\>\""}], ",", 
    "efficiencies", ",", "\"\<CSV\>\""}], "]"}], ";"}], "\n"}], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.870614207093935*^9, 3.870614224597218*^9}, {
   3.870704548517913*^9, 3.8707045495342503`*^9}, 3.8708777418289127`*^9, 
   3.870968791354842*^9},ExpressionUUID->"64103de5-64ee-48f6-a41d-\
d7de931645b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nb", "=", 
   RowBox[{"InputNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fn", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", "\"\<analysis_denver_dot_LSC.wls\>\"", "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEndToken", "[", 
   RowBox[{"nb", ",", "\"\<Save\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"fn", ",", "\"\<Text\>\""}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.870968881945569*^9, 3.8709688825488577`*^9}, {
  3.871029209384736*^9, 3.8710292099735126`*^9}, {3.8710315802087107`*^9, 
  3.8710315803133173`*^9}, {3.872576806342939*^9, 3.872576807472232*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"aa240670-55cb-4834-adc2-2d75685349c7"]
},
WindowSize->{1499, 857},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3e504b85-191c-40c5-8d02-deb2b04e7de0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 513, 12, 56, "Input",ExpressionUUID->"eff5ed55-8f92-4d10-b4ef-af36e67586c6",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[938, 29, 1025, 30, 170, "Code",ExpressionUUID->"4b4c73c3-3ef7-4992-9176-98823c16a59c",
 InitializationCell->False],
Cell[1966, 61, 401, 10, 28, "Message",ExpressionUUID->"25101a38-5127-428e-a349-0c10677cf733"],
Cell[2370, 73, 541, 11, 28, "Message",ExpressionUUID->"38864189-837b-4e31-96a1-33e86bf332ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2948, 89, 254, 5, 30, "Input",ExpressionUUID->"d0fe980d-5dae-410e-9eaf-f36cb6fc6973"],
Cell[3205, 96, 281, 5, 48, "Output",ExpressionUUID->"cdc840a5-8dce-491d-9875-030d00e547c3"]
}, Open  ]],
Cell[3501, 104, 381, 9, 52, "Input",ExpressionUUID->"46ae6a3a-a454-4ca2-ae57-bdfe87171357"],
Cell[CellGroupData[{
Cell[3907, 117, 352, 7, 52, "Input",ExpressionUUID->"ee3ced2b-608f-4f6e-b2a0-17e81e72536a"],
Cell[4262, 126, 533, 11, 28, "Message",ExpressionUUID->"62a6a89c-88c7-4f4f-bffe-d9f30e24597c"],
Cell[4798, 139, 184, 3, 48, "Output",ExpressionUUID->"22690163-6518-4233-81d0-02e4e30f94f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5019, 147, 183, 3, 30, "Input",ExpressionUUID->"baab336a-52bd-4b8c-8f1a-a588f4867c86"],
Cell[5205, 152, 176, 3, 48, "Output",ExpressionUUID->"4cbe7117-5e2c-4a9a-8774-8c688557d8d9"]
}, Open  ]],
Cell[5396, 158, 5847, 131, 170, "Code",ExpressionUUID->"e8e77a94-00da-4e24-984e-f8fa3233cbd4",
 InitializationCell->False],
Cell[11246, 291, 1403, 33, 136, "Input",ExpressionUUID->"6761e68c-2966-419b-8791-8bed61f57698"],
Cell[12652, 326, 271, 8, 56, "Input",ExpressionUUID->"3be53f68-4164-4517-a689-ebe390ce3d47"],
Cell[12926, 336, 911, 25, 94, "Input",ExpressionUUID->"539fafaa-87d8-4990-b71a-d0d31c333973"],
Cell[13840, 363, 3440, 92, 199, "Input",ExpressionUUID->"835da83f-9cd9-45a5-850f-11ab3052fbe8"],
Cell[17283, 457, 144, 3, 36, "Code",ExpressionUUID->"a6cb5017-f0f1-43fc-8176-37fd538b0a69",
 InitializationCell->False],
Cell[17430, 462, 2493, 83, 189, "Code",ExpressionUUID->"506b8331-d1c5-4959-9b8a-d7c2cd8a9672",
 InitializationCell->False],
Cell[19926, 547, 192, 4, 36, "Code",ExpressionUUID->"bc14f6d9-a27a-4a4f-bb69-2ced0c8ae8e1",
 InitializationCell->False],
Cell[20121, 553, 3956, 122, 189, "Code",ExpressionUUID->"381d5681-da33-4c97-ac96-d6754edb3fbf",
 InitializationCell->False],
Cell[24080, 677, 1437, 37, 75, "Code",ExpressionUUID->"a3361b3a-4ea1-48a2-b637-66061adc6eb9",
 InitializationCell->False],
Cell[25520, 716, 1262, 31, 75, "Code",ExpressionUUID->"ef603297-b7ca-421a-bdcc-6c001dfbe9f0",
 InitializationCell->False],
Cell[26785, 749, 1698, 47, 75, "Code",ExpressionUUID->"1e7c8efc-9dca-4c12-babb-51004e245283",
 InitializationCell->False],
Cell[28486, 798, 173, 4, 36, "Code",ExpressionUUID->"38c6ab7c-a2d0-46f9-827d-e8308b45fa0b",
 InitializationCell->False],
Cell[28662, 804, 842, 23, 56, "Code",ExpressionUUID->"50a3a7ea-e921-474b-af0d-212ec8f5e6e3",
 InitializationCell->False],
Cell[29507, 829, 1499, 47, 75, "Code",ExpressionUUID->"85c6fe21-b40d-4024-89ee-56eaafa8a08f",
 InitializationCell->False],
Cell[31009, 878, 956, 28, 56, "Code",ExpressionUUID->"bea4d808-e5a5-43b9-86cd-165b69b06890",
 InitializationCell->False],
Cell[31968, 908, 916, 29, 56, "Code",ExpressionUUID->"73c83f9c-08ba-4f56-a046-86341127c136",
 InitializationCell->False],
Cell[32887, 939, 561, 16, 56, "Code",ExpressionUUID->"66a5e450-abe2-4889-9985-2076c016da3e",
 InitializationCell->False],
Cell[33451, 957, 170, 4, 36, "Code",ExpressionUUID->"f61e7254-5246-4896-9422-a446f492b140",
 InitializationCell->False],
Cell[33624, 963, 2366, 67, 303, "Code",ExpressionUUID->"1cf039b1-bf16-42fa-944e-e12db0b89a55",
 InitializationCell->False],
Cell[35993, 1032, 1997, 42, 569, "Code",ExpressionUUID->"80dab81e-403a-4434-9acc-b476b6076f02",
 InitializationCell->False],
Cell[37993, 1076, 1090, 24, 303, "Code",ExpressionUUID->"5b8f4b02-a7e1-4eeb-a3f9-5a81a9ec4691",
 InitializationCell->False],
Cell[39086, 1102, 481, 13, 94, "Code",ExpressionUUID->"5f29833a-e520-4174-8b66-aab58377ae02",
 InitializationCell->False],
Cell[39570, 1117, 626, 18, 75, "Code",ExpressionUUID->"4849ae2e-3925-4a0d-830b-b996a6da1e2d",
 InitializationCell->False],
Cell[40199, 1137, 990, 27, 56, "Code",ExpressionUUID->"be60a10c-6666-479a-a8c2-634afa8cc262",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[41214, 1168, 326, 8, 36, "Code",ExpressionUUID->"7e046684-2688-499b-ad1c-8caf928c7bac",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False],
Cell[41543, 1178, 42232, 957, 3001, "Code",ExpressionUUID->"b4f534f4-9ea4-4f8c-96bf-ac8c0082d539",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->False]
}, Closed]],
Cell[CellGroupData[{
Cell[83812, 2140, 1279, 35, 216, "Input",ExpressionUUID->"296f3da0-8c18-4c44-a1f0-118c68418a11"],
Cell[85094, 2177, 157, 3, 71, "Output",ExpressionUUID->"5fa037b4-0293-48b2-8a1b-aa36ddfff27f"]
}, Open  ]],
Cell[85266, 2183, 3620, 101, 388, "Input",ExpressionUUID->"b0716dbd-6e91-42ed-8829-e26a75b479ec"],
Cell[CellGroupData[{
Cell[88911, 2288, 249, 5, 30, "Input",ExpressionUUID->"95803282-1fbc-4b98-841d-e3d651004dff"],
Cell[89163, 2295, 174, 3, 48, "Output",ExpressionUUID->"356de2ec-a53f-4636-ae44-40af4cc3a280"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89374, 2303, 218, 4, 30, "Input",ExpressionUUID->"7bc3c023-92bf-486c-a578-8ec5192593ab"],
Cell[89595, 2309, 208, 3, 48, "Output",ExpressionUUID->"f8cbaecc-6d99-4e73-a1b8-fcf2c3015a1b"]
}, Open  ]],
Cell[89818, 2315, 490, 12, 30, "Input",ExpressionUUID->"539d0acc-f310-4644-a8ea-0f104fd37d92"],
Cell[CellGroupData[{
Cell[90333, 2331, 1196, 32, 94, "Input",ExpressionUUID->"d13988d8-e44b-406c-a1bd-f66c0602aa77"],
Cell[91532, 2365, 308, 5, 48, "Output",ExpressionUUID->"c2a9370a-dc38-4b13-b120-344ecff982a0"],
Cell[91843, 2372, 307, 5, 48, "Output",ExpressionUUID->"63a9153f-7d0e-4838-96ba-d41556b6c3bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92187, 2382, 135, 2, 30, "Input",ExpressionUUID->"c4e3be30-7f2d-45c4-8708-575bf57c1584"],
Cell[92325, 2386, 171, 3, 48, "Output",ExpressionUUID->"3a04ce53-3108-4cf1-ba4e-477fe83f888e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92533, 2394, 134, 2, 30, "Input",ExpressionUUID->"2df359f8-badc-49af-a2b1-d601dd852634"],
Cell[92670, 2398, 195, 3, 48, "Output",ExpressionUUID->"cb72b9cc-2808-47fd-adcd-7908a2cf7326"]
}, Open  ]],
Cell[92880, 2404, 292, 6, 30, "Input",ExpressionUUID->"306ddd69-7029-4542-af03-a9e966794f7e"],
Cell[CellGroupData[{
Cell[93197, 2414, 135, 2, 30, "Input",ExpressionUUID->"20de4437-c3e7-423c-a5d8-65b7174bc454"],
Cell[93335, 2418, 193, 3, 48, "Output",ExpressionUUID->"7fc1f00b-0243-4ec2-a53a-1d8a462fef2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93565, 2426, 134, 2, 30, "Input",ExpressionUUID->"33cb2b41-f29d-422f-8955-c04e4ded9a2a"],
Cell[93702, 2430, 171, 3, 48, "Output",ExpressionUUID->"9e10d771-8dd1-4153-b5b3-5f3caef0d469"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93910, 2438, 3015, 89, 220, "Input",ExpressionUUID->"15e1f7bd-9f31-43f2-a8c1-c12f004dcf82"],
Cell[96928, 2529, 75447, 1258, 253, "Output",ExpressionUUID->"d4c0eee7-a289-4010-87a6-8694c1336505"],
Cell[172378, 3789, 361, 6, 48, "Output",ExpressionUUID->"bc1be06b-3953-487e-b084-d0102c88cbaf"],
Cell[172742, 3797, 361, 6, 48, "Output",ExpressionUUID->"cb1fdcda-433d-4fb6-9f5a-346b2453bf43"]
}, Open  ]],
Cell[173118, 3806, 1356, 33, 115, "Input",ExpressionUUID->"1fb7688e-e28e-4825-86df-6688be0fc191"],
Cell[174477, 3841, 3807, 91, 241, "Input",ExpressionUUID->"b60e4795-2ad5-41d0-a668-d02d0545ff4f"],
Cell[178287, 3934, 4233, 118, 199, "Input",ExpressionUUID->"e1c9ea54-df27-4ca7-b179-2d80d2ff1977"],
Cell[CellGroupData[{
Cell[182545, 4056, 880, 20, 73, "Input",ExpressionUUID->"a2b5cf47-8e72-4466-9f8a-a1942d232d1a"],
Cell[183428, 4078, 20935, 362, 257, "Output",ExpressionUUID->"38ce948f-1304-402b-a2b7-37738ede7fe9"]
}, Open  ]],
Cell[204378, 4443, 1084, 29, 94, "Input",ExpressionUUID->"13da0c10-6376-4824-9f93-103534749816"],
Cell[205465, 4474, 128, 3, 30, "Input",ExpressionUUID->"25b3797d-e1dc-4a40-9660-68211c2260a3"],
Cell[CellGroupData[{
Cell[205618, 4481, 127, 2, 30, "Input",ExpressionUUID->"48a6a399-0d9b-4f9a-990f-e583cdcb10e2"],
Cell[205748, 4485, 19868, 377, 81, "Output",ExpressionUUID->"9b5b4354-6fe2-43e3-9535-670b1add213f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225653, 4867, 1648, 41, 157, "Input",ExpressionUUID->"a394657c-77a7-4525-b19e-597421cc029f"],
Cell[227304, 4910, 22673, 392, 256, "Output",ExpressionUUID->"dac24768-e61c-4296-a6f9-8853419ecf04"],
Cell[249980, 5304, 240, 4, 48, "Output",ExpressionUUID->"3c353bcf-3dc3-4de1-875d-8866e496f783"],
Cell[250223, 5310, 283, 5, 48, "Output",ExpressionUUID->"72888ad8-f7e0-4534-9165-4e3597d79f5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250543, 5320, 2995, 73, 262, "Input",ExpressionUUID->"346858c0-35cc-4213-a4d9-281d7057df02"],
Cell[253541, 5395, 194, 3, 48, "Output",ExpressionUUID->"4a946fc7-002f-4193-bcc7-148a210e5770"],
Cell[253738, 5400, 203, 3, 48, "Output",ExpressionUUID->"4644914f-d568-4a3e-bc46-5021e6863f95"]
}, Open  ]],
Cell[253956, 5406, 12504, 332, 643, "Input",ExpressionUUID->"7a071698-6f35-4df4-9a4e-e52ff8d9634b"],
Cell[266463, 5740, 1969, 55, 220, "Input",ExpressionUUID->"2a218199-35ca-4d17-89bb-032e1b5a5b14"],
Cell[CellGroupData[{
Cell[268457, 5799, 1092, 30, 94, "Input",ExpressionUUID->"6b516b9a-092a-42f8-b090-ca1adafaa494"],
Cell[269552, 5831, 15975, 282, 251, "Output",ExpressionUUID->"4273b221-df8b-4949-bac2-e2f2125d17ad"],
Cell[285530, 6115, 220, 4, 48, "Output",ExpressionUUID->"99ba9f3f-47fe-4011-ac70-374d8c6dae3e"],
Cell[285753, 6121, 257, 5, 48, "Output",ExpressionUUID->"8e312e04-e25c-4139-9d19-68a4aae09ce1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286047, 6131, 1332, 36, 94, "Input",ExpressionUUID->"d2dbfd3d-f2eb-41dd-8139-cb812935c687"],
Cell[287382, 6169, 24722, 425, 256, "Output",ExpressionUUID->"b5b91534-bbd4-4796-84a9-3a45098b4b3c"]
}, Open  ]],
Cell[312119, 6597, 221, 4, 33, InheritFromParent,ExpressionUUID->"b0ee6ac1-6751-4c8d-9c7f-72f17d100d5c"],
Cell[CellGroupData[{
Cell[312365, 6605, 518, 12, 30, "Input",ExpressionUUID->"e29372f9-85e1-4efb-9729-c6b08f4acd56"],
Cell[312886, 6619, 196, 3, 71, "Output",ExpressionUUID->"51c189a9-b2f5-4a1d-b0cb-8b63866773a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313119, 6627, 441, 12, 30, "Input",ExpressionUUID->"e97d906f-324d-4563-9b16-7a2904779e52"],
Cell[313563, 6641, 299, 5, 48, "Output",ExpressionUUID->"bf6acce8-0b02-47a2-bdcb-12e004318e3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313899, 6651, 393, 10, 30, "Input",ExpressionUUID->"41b8f3b9-65b3-46e2-9576-23a261db57af"],
Cell[314295, 6663, 24747, 425, 256, "Output",ExpressionUUID->"c58d8c46-4e03-4a9a-ae42-a58322442c80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339079, 7093, 1962, 57, 136, "Input",ExpressionUUID->"2e7254af-a43d-433d-a86a-90d433214111"],
Cell[341044, 7152, 194, 3, 48, "Output",ExpressionUUID->"e134846d-f7eb-4f0b-924e-88bc6b531d21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341275, 7160, 653, 15, 73, "Input",ExpressionUUID->"eff02b09-ce96-4793-af22-131da91d9248"],
Cell[341931, 7177, 201, 3, 48, "Output",ExpressionUUID->"091819c5-889f-45fa-ad76-02a666fbc353"]
}, Open  ]],
Cell[342147, 7183, 3888, 100, 283, "Input",ExpressionUUID->"190ff15d-4e73-40e9-be01-dc0ce127f3e7"],
Cell[CellGroupData[{
Cell[346060, 7287, 2096, 61, 283, "Input",ExpressionUUID->"f51d455e-77dc-43dd-8718-dbc7bac7b47b"],
Cell[348159, 7350, 9208, 170, 250, "Output",ExpressionUUID->"e029ca24-5dbd-4178-a2c4-dfec8f4ec70d"],
Cell[357370, 7522, 8443, 158, 246, "Output",ExpressionUUID->"b5237745-e215-4bd0-a4e5-819702b93384"],
Cell[365816, 7682, 489, 10, 28, "Message",ExpressionUUID->"c585b431-c2a1-4958-8c76-bb9bf56256dd"],
Cell[366308, 7694, 475, 10, 28, "Message",ExpressionUUID->"e356fc8d-77cf-43d0-a4fd-e60844c22670"],
Cell[366786, 7706, 475, 10, 28, "Message",ExpressionUUID->"2def22eb-f66d-4339-9957-d37a90567539"],
Cell[367264, 7718, 472, 10, 28, "Message",ExpressionUUID->"b2a3f773-bd58-4dbb-9f50-644f4af49fbd"],
Cell[367739, 7730, 489, 10, 28, "Message",ExpressionUUID->"0ccc12ff-3709-4433-b25e-57dd19178421"],
Cell[368231, 7742, 475, 10, 28, "Message",ExpressionUUID->"2a436d66-a746-45cf-b54c-87820e6fcdc5"],
Cell[368709, 7754, 475, 10, 28, "Message",ExpressionUUID->"9fa1d1e7-3341-4dad-b09d-90e35909f683"],
Cell[369187, 7766, 472, 10, 28, "Message",ExpressionUUID->"6b61628c-dcb0-4d8a-b9f2-b4e3ec3986c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369696, 7781, 250, 6, 30, "Input",ExpressionUUID->"ddf32a07-29e5-4692-aa92-8cdd366dc076"],
Cell[369949, 7789, 174, 3, 48, "Output",ExpressionUUID->"f8cb7d0a-5b9c-4787-985c-ac26fafe8c3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370160, 7797, 169, 3, 30, "Input",ExpressionUUID->"68d8dfe5-7e4a-4d12-b47b-6e7175d6c7e1"],
Cell[370332, 7802, 172, 3, 48, "Output",ExpressionUUID->"5a7464f5-b9ea-48bf-894a-40a389be0675"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370541, 7810, 213, 5, 30, "Input",ExpressionUUID->"e060d4ac-e607-4ba0-adf2-79e9eff260ce"],
Cell[370757, 7817, 194, 3, 48, "Output",ExpressionUUID->"f19483c6-4b79-4508-8b0b-273042817a55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370988, 7825, 181, 3, 30, "Input",ExpressionUUID->"3a90f3bf-7ad9-4ccf-b8a0-bac91432f6c1"],
Cell[371172, 7830, 171, 3, 71, "Output",ExpressionUUID->"0d2035e4-75b3-4e3d-92bc-1f456285a695"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371380, 7838, 4911, 124, 537, "Input",ExpressionUUID->"b3483f6f-5f1b-4316-b0e1-0c04223428dc"],
Cell[376294, 7964, 223, 4, 48, "Output",ExpressionUUID->"b1abbc71-9933-4aa5-8224-8f2794ee50d8"],
Cell[376520, 7970, 223, 4, 48, "Output",ExpressionUUID->"a9a1af5a-7dda-4ea4-92c7-351757192526"],
Cell[376746, 7976, 224, 4, 48, "Output",ExpressionUUID->"0c3db018-e63f-40b4-9fe9-7aae7323c084"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377007, 7985, 125, 2, 30, "Input",ExpressionUUID->"cbebd3e4-d82d-46e5-afad-364621d47c42"],
Cell[377135, 7989, 173, 3, 48, "Output",ExpressionUUID->"202f8a68-7a22-4c7c-94cb-2eee104d2100"]
}, Open  ]],
Cell[377323, 7995, 1398, 36, 75, "Code",ExpressionUUID->"64103de5-64ee-48f6-a41d-d7de931645b6",
 InitializationCell->False],
Cell[378724, 8033, 757, 17, 73, "Input",ExpressionUUID->"aa240670-55cb-4834-adc2-2d75685349c7"]
}
]
*)

